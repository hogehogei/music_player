ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_hal_rtc_ex.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_RTCEx_SetTimeStamp,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_RTCEx_SetTimeStamp
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_RTCEx_SetTimeStamp:
  24              	.LFB35:
  25              		.file 1 "Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c"
   1:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @file    stm32f0xx_hal_rtc_ex.c
   4:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @brief   Extended RTC HAL module driver.
   6:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *          functionalities of the Real Time Clock (RTC) Extended peripheral:
   8:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *           + RTC Time Stamp functions
   9:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *           + RTC Tamper functions 
  10:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *           + RTC Wake-up functions
  11:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *           + Extended Control functions
  12:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *           + Extended RTC features functions    
  13:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *
  14:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   @verbatim
  15:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   ==============================================================================
  16:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****                   ##### How to use this driver #####
  17:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   ==============================================================================
  18:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   [..] 
  19:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     (+) Enable the RTC domain access.
  20:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****         (+) Configure the RTC Prescaler (Asynchronous and Synchronous) and RTC hour 
  21:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****             format using the HAL_RTC_Init() function.
  22:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
  23:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     *** RTC Wake-up configuration ***
  24:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     ================================
  25:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     [..] 
  26:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     (+) To configure the RTC Wakeup Clock source and Counter use the HAL_RTCEx_SetWakeUpTimer()
  27:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****         function. You can also configure the RTC Wakeup timer with interrupt mode 
  28:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****             using the HAL_RTCEx_SetWakeUpTimer_IT() function.
  29:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     (+) To read the RTC WakeUp Counter register, use the HAL_RTCEx_GetWakeUpTimer()
  30:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****             function.
  31:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****         (@) Not available on F030x4/x6/x8 and F070x6            
  32:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   
  33:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     *** TimeStamp configuration ***
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 2


  34:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     ===============================
  35:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     [..]
  36:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****         (+) Configure the RTC_AF trigger and enable the RTC TimeStamp using the 
  37:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****             HAL_RTCEx_SetTimeStamp() function. You can also configure the RTC TimeStamp with 
  38:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****             interrupt mode using the HAL_RTCEx_SetTimeStamp_IT() function.
  39:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****         (+) To read the RTC TimeStamp Time and Date register, use the HAL_RTCEx_GetTimeStamp()
  40:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****             function.
  41:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   
  42:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     *** Tamper configuration ***
  43:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     ============================
  44:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     [..]
  45:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****         (+) Enable the RTC Tamper and configure the Tamper filter count, trigger Edge 
  46:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****             or Level according to the Tamper filter (if equal to 0 Edge else Level) 
  47:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****             value, sampling frequency, precharge or discharge and Pull-UP using the 
  48:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****             HAL_RTCEx_SetTamper() function. You can configure RTC Tamper in interrupt 
  49:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****             mode using HAL_RTCEx_SetTamper_IT() function.
  50:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   
  51:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     *** Backup Data Registers configuration ***
  52:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     ===========================================
  53:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     [..]
  54:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****         (+) To write to the RTC Backup Data registers, use the HAL_RTCEx_BKUPWrite()
  55:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****             function.  
  56:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****         (+) To read the RTC Backup Data registers, use the HAL_RTCEx_BKUPRead()
  57:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****             function.
  58:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****         (@) Not available on F030x6/x8/xC and F070x6/xB (F0xx Value Line devices)
  59:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****    
  60:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****      
  61:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****    @endverbatim
  62:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   ******************************************************************************
  63:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @attention
  64:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *
  65:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  66:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *
  67:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * Redistribution and use in source and binary forms, with or without modification,
  68:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * are permitted provided that the following conditions are met:
  69:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  70:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *      this list of conditions and the following disclaimer.
  71:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  72:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *      this list of conditions and the following disclaimer in the documentation
  73:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *      and/or other materials provided with the distribution.
  74:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  75:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *      may be used to endorse or promote products derived from this software
  76:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *      without specific prior written permission.
  77:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *
  78:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  79:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  80:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  81:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  82:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  83:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  84:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  85:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  86:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  87:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  88:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *
  89:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   ******************************************************************************  
  90:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   */ 
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 3


  91:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
  92:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** /* Includes ------------------------------------------------------------------*/
  93:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** #include "stm32f0xx_hal.h"
  94:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
  95:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** /** @addtogroup STM32F0xx_HAL_Driver
  96:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @{
  97:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   */
  98:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
  99:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** /** @addtogroup RTCEx
 102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @brief RTC Extended HAL module driver
 103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @{
 104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   */
 105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** #ifdef HAL_RTC_MODULE_ENABLED
 107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** /* Private typedef -----------------------------------------------------------*/
 109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** /* Private define ------------------------------------------------------------*/
 110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** /* Private macro -------------------------------------------------------------*/
 111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** /* Private variables ---------------------------------------------------------*/
 112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** /* Private function prototypes -----------------------------------------------*/
 113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** /* Exported functions ---------------------------------------------------------*/
 114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions
 116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @{
 117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   */
 118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions_Group1
 121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****  *  @brief   RTC TimeStamp and Tamper functions
 122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****  *
 123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** @verbatim   
 124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****  ===============================================================================
 125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****                  ##### RTC TimeStamp and Tamper functions #####
 126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****  ===============================================================================  
 127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****  
 128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****  [..] This section provides functions allowing to configure TimeStamp feature
 129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** @endverbatim
 131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @{
 132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   */
 133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** /**
 135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @brief  Set TimeStamp.
 136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @note   This API must be called before enabling the TimeStamp feature.
 137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  TimeStampEdge Specifies the pin edge on which the TimeStamp is
 139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *         activated.
 140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPEDGE_RISING: the Time stamp event occurs on the  
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *                                        rising edge of the related pin.
 143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPEDGE_FALLING: the Time stamp event occurs on the 
 144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *                                         falling edge of the related pin.
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  RTC_TimeStampPin specifies the RTC TimeStamp Pin.
 146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPPIN_DEFAULT: PC13 is selected as RTC TimeStamp Pin.
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 4


 148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @retval HAL status
 149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   */
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetTimeStamp(RTC_HandleTypeDef *hrtc, uint32_t TimeStampEdge, uint32_t 
 151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** {
  26              		.loc 1 151 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 30B5     		push	{r4, r5, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 12
  34              		.cfi_offset 4, -12
  35              		.cfi_offset 5, -8
  36              		.cfi_offset 14, -4
  37              	.LVL1:
 152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   uint32_t tmpreg = 0U;
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Check the parameters */
 155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   assert_param(IS_TIMESTAMP_EDGE(TimeStampEdge));
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TIMESTAMP_PIN(RTC_TimeStampPin));
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Process Locked */
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
  38              		.loc 1 159 0
  39 0002 037F     		ldrb	r3, [r0, #28]
  40 0004 012B     		cmp	r3, #1
  41 0006 1DD0     		beq	.L3
  42              		.loc 1 159 0 is_stmt 0 discriminator 2
  43 0008 0122     		movs	r2, #1
  44              	.LVL2:
  45 000a 0277     		strb	r2, [r0, #28]
 160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
  46              		.loc 1 161 0 is_stmt 1 discriminator 2
  47 000c 0223     		movs	r3, #2
  48 000e 4377     		strb	r3, [r0, #29]
 162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Get the RTC_CR register and clear the bits to be configured */
 164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   tmpreg = (uint32_t)(hrtc->Instance->CR & (uint32_t)~(RTC_CR_TSEDGE | RTC_CR_TSE));
  49              		.loc 1 164 0 discriminator 2
  50 0010 0468     		ldr	r4, [r0]
  51 0012 A368     		ldr	r3, [r4, #8]
  52 0014 0C4D     		ldr	r5, .L4
  53 0016 2B40     		ands	r3, r5
  54              	.LVL3:
 165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   tmpreg|= TimeStampEdge;
  55              		.loc 1 166 0 discriminator 2
  56 0018 1943     		orrs	r1, r3
  57              	.LVL4:
 167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
  58              		.loc 1 169 0 discriminator 2
  59 001a CA23     		movs	r3, #202
  60 001c 6362     		str	r3, [r4, #36]
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 5


  61 001e 0368     		ldr	r3, [r0]
  62 0020 5324     		movs	r4, #83
  63 0022 5C62     		str	r4, [r3, #36]
 170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Configure the Time Stamp TSEDGE and Enable bits */
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->Instance->CR = (uint32_t)tmpreg;
  64              		.loc 1 172 0 discriminator 2
  65 0024 0368     		ldr	r3, [r0]
  66 0026 9960     		str	r1, [r3, #8]
 173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_ENABLE(hrtc);
  67              		.loc 1 174 0 discriminator 2
  68 0028 0168     		ldr	r1, [r0]
  69              	.LVL5:
  70 002a 8C68     		ldr	r4, [r1, #8]
  71 002c 8023     		movs	r3, #128
  72              	.LVL6:
  73 002e 1B01     		lsls	r3, r3, #4
  74 0030 2343     		orrs	r3, r4
  75 0032 8B60     		str	r3, [r1, #8]
 175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
  76              		.loc 1 177 0 discriminator 2
  77 0034 0368     		ldr	r3, [r0]
  78 0036 FF21     		movs	r1, #255
  79 0038 5962     		str	r1, [r3, #36]
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Change RTC state */
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
  80              		.loc 1 180 0 discriminator 2
  81 003a 4277     		strb	r2, [r0, #29]
 181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Process Unlocked */
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
  82              		.loc 1 183 0 discriminator 2
  83 003c 0023     		movs	r3, #0
  84 003e 0377     		strb	r3, [r0, #28]
 184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   return HAL_OK;
  85              		.loc 1 185 0 discriminator 2
  86 0040 0020     		movs	r0, #0
  87              	.LVL7:
  88              	.L2:
 186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** }
  89              		.loc 1 186 0
  90              		@ sp needed
  91 0042 30BD     		pop	{r4, r5, pc}
  92              	.LVL8:
  93              	.L3:
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
  94              		.loc 1 159 0
  95 0044 0220     		movs	r0, #2
  96              	.LVL9:
  97 0046 FCE7     		b	.L2
  98              	.L5:
  99              		.align	2
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 6


 100              	.L4:
 101 0048 F7F7FFFF 		.word	-2057
 102              		.cfi_endproc
 103              	.LFE35:
 105              		.section	.text.HAL_RTCEx_SetTimeStamp_IT,"ax",%progbits
 106              		.align	1
 107              		.global	HAL_RTCEx_SetTimeStamp_IT
 108              		.syntax unified
 109              		.code	16
 110              		.thumb_func
 111              		.fpu softvfp
 113              	HAL_RTCEx_SetTimeStamp_IT:
 114              	.LFB36:
 187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** /**
 189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @brief  Set TimeStamp with Interrupt.
 190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @note   This API must be called before enabling the TimeStamp feature.
 192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  TimeStampEdge Specifies the pin edge on which the TimeStamp is 
 193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *         activated.
 194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPEDGE_RISING: the Time stamp event occurs on the  
 196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *                                        rising edge of the related pin.
 197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPEDGE_FALLING: the Time stamp event occurs on the 
 198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *                                         falling edge of the related pin.
 199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  RTC_TimeStampPin Specifies the RTC TimeStamp Pin.
 200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPPIN_DEFAULT: PC13 is selected as RTC TimeStamp Pin.
 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @retval HAL status
 203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   */
 204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetTimeStamp_IT(RTC_HandleTypeDef *hrtc, uint32_t TimeStampEdge, uint32
 205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** {
 115              		.loc 1 205 0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 0, uses_anonymous_args = 0
 119              	.LVL10:
 120 0000 30B5     		push	{r4, r5, lr}
 121              	.LCFI1:
 122              		.cfi_def_cfa_offset 12
 123              		.cfi_offset 4, -12
 124              		.cfi_offset 5, -8
 125              		.cfi_offset 14, -4
 126              	.LVL11:
 206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   uint32_t tmpreg = 0U;
 207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Check the parameters */
 209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   assert_param(IS_TIMESTAMP_EDGE(TimeStampEdge));
 210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TIMESTAMP_PIN(RTC_TimeStampPin));
 211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Process Locked */ 
 213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 127              		.loc 1 213 0
 128 0002 037F     		ldrb	r3, [r0, #28]
 129 0004 012B     		cmp	r3, #1
 130 0006 2CD0     		beq	.L8
 131              		.loc 1 213 0 is_stmt 0 discriminator 2
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 7


 132 0008 0124     		movs	r4, #1
 133 000a 0477     		strb	r4, [r0, #28]
 214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 134              		.loc 1 215 0 is_stmt 1 discriminator 2
 135 000c 0223     		movs	r3, #2
 136 000e 4377     		strb	r3, [r0, #29]
 216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Get the RTC_CR register and clear the bits to be configured */
 218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   tmpreg = (uint32_t)(hrtc->Instance->CR & (uint32_t)~(RTC_CR_TSEDGE | RTC_CR_TSE));
 137              		.loc 1 218 0 discriminator 2
 138 0010 0268     		ldr	r2, [r0]
 139              	.LVL12:
 140 0012 9368     		ldr	r3, [r2, #8]
 141 0014 144D     		ldr	r5, .L9
 142 0016 2B40     		ands	r3, r5
 143              	.LVL13:
 219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   tmpreg |= TimeStampEdge;
 144              		.loc 1 220 0 discriminator 2
 145 0018 1943     		orrs	r1, r3
 146              	.LVL14:
 221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 147              		.loc 1 223 0 discriminator 2
 148 001a CA23     		movs	r3, #202
 149 001c 5362     		str	r3, [r2, #36]
 150 001e 0368     		ldr	r3, [r0]
 151 0020 5322     		movs	r2, #83
 152 0022 5A62     		str	r2, [r3, #36]
 224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Configure the Time Stamp TSEDGE and Enable bits */
 226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->Instance->CR = (uint32_t)tmpreg;
 153              		.loc 1 226 0 discriminator 2
 154 0024 0368     		ldr	r3, [r0]
 155 0026 9960     		str	r1, [r3, #8]
 227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_ENABLE(hrtc);
 156              		.loc 1 228 0 discriminator 2
 157 0028 0268     		ldr	r2, [r0]
 158 002a 9168     		ldr	r1, [r2, #8]
 159              	.LVL15:
 160 002c 8023     		movs	r3, #128
 161              	.LVL16:
 162 002e 1B01     		lsls	r3, r3, #4
 163 0030 0B43     		orrs	r3, r1
 164 0032 9360     		str	r3, [r2, #8]
 229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Enable IT timestamp */
 231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_ENABLE_IT(hrtc,RTC_IT_TS);
 165              		.loc 1 231 0 discriminator 2
 166 0034 0268     		ldr	r2, [r0]
 167 0036 9168     		ldr	r1, [r2, #8]
 168 0038 8023     		movs	r3, #128
 169 003a 1B02     		lsls	r3, r3, #8
 170 003c 0B43     		orrs	r3, r1
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 8


 171 003e 9360     		str	r3, [r2, #8]
 232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* RTC timestamp Interrupt Configuration: EXTI configuration */
 234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_IT();
 172              		.loc 1 234 0 discriminator 2
 173 0040 0A4B     		ldr	r3, .L9+4
 174 0042 1968     		ldr	r1, [r3]
 175 0044 8022     		movs	r2, #128
 176 0046 1203     		lsls	r2, r2, #12
 177 0048 1143     		orrs	r1, r2
 178 004a 1960     		str	r1, [r3]
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_RISING_EDGE();
 179              		.loc 1 236 0 discriminator 2
 180 004c 9968     		ldr	r1, [r3, #8]
 181 004e 0A43     		orrs	r2, r1
 182 0050 9A60     		str	r2, [r3, #8]
 237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 183              		.loc 1 239 0 discriminator 2
 184 0052 0368     		ldr	r3, [r0]
 185 0054 FF22     		movs	r2, #255
 186 0056 5A62     		str	r2, [r3, #36]
 240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 187              		.loc 1 241 0 discriminator 2
 188 0058 4477     		strb	r4, [r0, #29]
 242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Process Unlocked */
 244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 189              		.loc 1 244 0 discriminator 2
 190 005a 0023     		movs	r3, #0
 191 005c 0377     		strb	r3, [r0, #28]
 245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   return HAL_OK;
 192              		.loc 1 246 0 discriminator 2
 193 005e 0020     		movs	r0, #0
 194              	.LVL17:
 195              	.L7:
 247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** }
 196              		.loc 1 247 0
 197              		@ sp needed
 198 0060 30BD     		pop	{r4, r5, pc}
 199              	.LVL18:
 200              	.L8:
 213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 201              		.loc 1 213 0
 202 0062 0220     		movs	r0, #2
 203              	.LVL19:
 204 0064 FCE7     		b	.L7
 205              	.L10:
 206 0066 C046     		.align	2
 207              	.L9:
 208 0068 F7F7FFFF 		.word	-2057
 209 006c 00040140 		.word	1073808384
 210              		.cfi_endproc
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 9


 211              	.LFE36:
 213              		.section	.text.HAL_RTCEx_DeactivateTimeStamp,"ax",%progbits
 214              		.align	1
 215              		.global	HAL_RTCEx_DeactivateTimeStamp
 216              		.syntax unified
 217              		.code	16
 218              		.thumb_func
 219              		.fpu softvfp
 221              	HAL_RTCEx_DeactivateTimeStamp:
 222              	.LFB37:
 248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** /**
 250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @brief  Deactivate TimeStamp.
 251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @retval HAL status
 253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   */
 254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateTimeStamp(RTC_HandleTypeDef *hrtc)
 255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** {
 223              		.loc 1 255 0
 224              		.cfi_startproc
 225              		@ args = 0, pretend = 0, frame = 0
 226              		@ frame_needed = 0, uses_anonymous_args = 0
 227              	.LVL20:
 228 0000 10B5     		push	{r4, lr}
 229              	.LCFI2:
 230              		.cfi_def_cfa_offset 8
 231              		.cfi_offset 4, -8
 232              		.cfi_offset 14, -4
 233              	.LVL21:
 256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   uint32_t tmpreg = 0U;
 257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Process Locked */
 259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 234              		.loc 1 259 0
 235 0002 037F     		ldrb	r3, [r0, #28]
 236 0004 012B     		cmp	r3, #1
 237 0006 1BD0     		beq	.L13
 238              		.loc 1 259 0 is_stmt 0 discriminator 2
 239 0008 0122     		movs	r2, #1
 240 000a 0277     		strb	r2, [r0, #28]
 260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 241              		.loc 1 261 0 is_stmt 1 discriminator 2
 242 000c 0223     		movs	r3, #2
 243 000e 4377     		strb	r3, [r0, #29]
 262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 244              		.loc 1 264 0 discriminator 2
 245 0010 0368     		ldr	r3, [r0]
 246 0012 CA21     		movs	r1, #202
 247 0014 5962     		str	r1, [r3, #36]
 248 0016 0368     		ldr	r3, [r0]
 249 0018 7739     		subs	r1, r1, #119
 250 001a 5962     		str	r1, [r3, #36]
 265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* In case of interrupt mode is used, the interrupt source must disabled */
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 10


 267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_DISABLE_IT(hrtc, RTC_IT_TS);
 251              		.loc 1 267 0 discriminator 2
 252 001c 0168     		ldr	r1, [r0]
 253 001e 8B68     		ldr	r3, [r1, #8]
 254 0020 084C     		ldr	r4, .L14
 255 0022 2340     		ands	r3, r4
 256 0024 8B60     		str	r3, [r1, #8]
 268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Get the RTC_CR register and clear the bits to be configured */
 270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   tmpreg = (uint32_t)(hrtc->Instance->CR & (uint32_t)~(RTC_CR_TSEDGE | RTC_CR_TSE));
 257              		.loc 1 270 0 discriminator 2
 258 0026 0168     		ldr	r1, [r0]
 259 0028 8B68     		ldr	r3, [r1, #8]
 260 002a 074C     		ldr	r4, .L14+4
 261 002c 2340     		ands	r3, r4
 262              	.LVL22:
 271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Configure the Time Stamp TSEDGE and Enable bits */
 273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->Instance->CR = (uint32_t)tmpreg;
 263              		.loc 1 273 0 discriminator 2
 264 002e 8B60     		str	r3, [r1, #8]
 274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 265              		.loc 1 276 0 discriminator 2
 266 0030 0368     		ldr	r3, [r0]
 267              	.LVL23:
 268 0032 FF21     		movs	r1, #255
 269              	.LVL24:
 270 0034 5962     		str	r1, [r3, #36]
 277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 271              		.loc 1 278 0 discriminator 2
 272 0036 4277     		strb	r2, [r0, #29]
 279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Process Unlocked */
 281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 273              		.loc 1 281 0 discriminator 2
 274 0038 0023     		movs	r3, #0
 275 003a 0377     		strb	r3, [r0, #28]
 282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   return HAL_OK;
 276              		.loc 1 283 0 discriminator 2
 277 003c 0020     		movs	r0, #0
 278              	.LVL25:
 279              	.L12:
 284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** }
 280              		.loc 1 284 0
 281              		@ sp needed
 282 003e 10BD     		pop	{r4, pc}
 283              	.LVL26:
 284              	.L13:
 259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 285              		.loc 1 259 0
 286 0040 0220     		movs	r0, #2
 287              	.LVL27:
 288 0042 FCE7     		b	.L12
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 11


 289              	.L15:
 290              		.align	2
 291              	.L14:
 292 0044 FF7FFFFF 		.word	-32769
 293 0048 F7F7FFFF 		.word	-2057
 294              		.cfi_endproc
 295              	.LFE37:
 297              		.section	.text.HAL_RTCEx_GetTimeStamp,"ax",%progbits
 298              		.align	1
 299              		.global	HAL_RTCEx_GetTimeStamp
 300              		.syntax unified
 301              		.code	16
 302              		.thumb_func
 303              		.fpu softvfp
 305              	HAL_RTCEx_GetTimeStamp:
 306              	.LFB38:
 285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** /**
 287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @brief  Get the RTC TimeStamp value.
 288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  sTimeStamp Pointer to Time structure
 291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  sTimeStampDate Pointer to Date structure  
 292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  Format specifies the format of the entered parameters.
 293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *             @arg RTC_FORMAT_BIN: Binary data format 
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *             @arg RTC_FORMAT_BCD: BCD data format
 296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @retval HAL status
 297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   */
 298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_GetTimeStamp(RTC_HandleTypeDef *hrtc, RTC_TimeTypeDef* sTimeStamp, RTC_
 299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** {
 307              		.loc 1 299 0
 308              		.cfi_startproc
 309              		@ args = 0, pretend = 0, frame = 0
 310              		@ frame_needed = 0, uses_anonymous_args = 0
 311              	.LVL28:
 312 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 313              	.LCFI3:
 314              		.cfi_def_cfa_offset 24
 315              		.cfi_offset 3, -24
 316              		.cfi_offset 4, -20
 317              		.cfi_offset 5, -16
 318              		.cfi_offset 6, -12
 319              		.cfi_offset 7, -8
 320              		.cfi_offset 14, -4
 321 0002 CE46     		mov	lr, r9
 322 0004 4746     		mov	r7, r8
 323 0006 80B5     		push	{r7, lr}
 324              	.LCFI4:
 325              		.cfi_def_cfa_offset 32
 326              		.cfi_offset 8, -32
 327              		.cfi_offset 9, -28
 328 0008 0600     		movs	r6, r0
 329 000a 0C00     		movs	r4, r1
 330 000c 1500     		movs	r5, r2
 331 000e 9946     		mov	r9, r3
 332              	.LVL29:
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 12


 300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   uint32_t tmptime = 0U, tmpdate = 0U;
 301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Check the parameters */
 303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   assert_param(IS_RTC_FORMAT(Format));
 304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Get the TimeStamp time and date registers values */
 306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   tmptime = (uint32_t)(hrtc->Instance->TSTR & RTC_TR_RESERVED_MASK);
 333              		.loc 1 306 0
 334 0010 0268     		ldr	r2, [r0]
 335              	.LVL30:
 336 0012 106B     		ldr	r0, [r2, #48]
 337              	.LVL31:
 338 0014 2549     		ldr	r1, .L19
 339              	.LVL32:
 340 0016 0140     		ands	r1, r0
 341              	.LVL33:
 307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   tmpdate = (uint32_t)(hrtc->Instance->TSDR & RTC_DR_RESERVED_MASK);
 342              		.loc 1 307 0
 343 0018 506B     		ldr	r0, [r2, #52]
 344 001a 254A     		ldr	r2, .L19+4
 345 001c 0240     		ands	r2, r0
 346              	.LVL34:
 308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Fill the Time structure fields with the read parameters */
 310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   sTimeStamp->Hours = (uint8_t)((tmptime & (RTC_TR_HT | RTC_TR_HU)) >> 16U);
 347              		.loc 1 310 0
 348 001e 0B0C     		lsrs	r3, r1, #16
 349              	.LVL35:
 350 0020 9846     		mov	r8, r3
 351 0022 3F20     		movs	r0, #63
 352 0024 1F00     		movs	r7, r3
 353 0026 0740     		ands	r7, r0
 354 0028 2770     		strb	r7, [r4]
 311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   sTimeStamp->Minutes = (uint8_t)((tmptime & (RTC_TR_MNT | RTC_TR_MNU)) >> 8U);
 355              		.loc 1 311 0
 356 002a 0B0A     		lsrs	r3, r1, #8
 357 002c 7F27     		movs	r7, #127
 358 002e 3B40     		ands	r3, r7
 359 0030 6370     		strb	r3, [r4, #1]
 312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   sTimeStamp->Seconds = (uint8_t)(tmptime & (RTC_TR_ST | RTC_TR_SU));
 360              		.loc 1 312 0
 361 0032 3940     		ands	r1, r7
 362              	.LVL36:
 363 0034 A170     		strb	r1, [r4, #2]
 313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   sTimeStamp->TimeFormat = (uint8_t)((tmptime & (RTC_TR_PM)) >> 16U);
 364              		.loc 1 313 0
 365 0036 4021     		movs	r1, #64
 366 0038 4346     		mov	r3, r8
 367 003a 1940     		ands	r1, r3
 368 003c E170     		strb	r1, [r4, #3]
 314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   sTimeStamp->SubSeconds = (uint32_t) hrtc->Instance->TSSSR;
 369              		.loc 1 314 0
 370 003e 3168     		ldr	r1, [r6]
 371 0040 896B     		ldr	r1, [r1, #56]
 372 0042 6160     		str	r1, [r4, #4]
 315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Fill the Date structure fields with the read parameters */
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 13


 317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   sTimeStampDate->Year = 0;
 373              		.loc 1 317 0
 374 0044 0021     		movs	r1, #0
 375 0046 E970     		strb	r1, [r5, #3]
 318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   sTimeStampDate->Month = (uint8_t)((tmpdate & (RTC_DR_MT | RTC_DR_MU)) >> 8U);
 376              		.loc 1 318 0
 377 0048 170A     		lsrs	r7, r2, #8
 378 004a 1F31     		adds	r1, r1, #31
 379 004c 3940     		ands	r1, r7
 380 004e 6970     		strb	r1, [r5, #1]
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   sTimeStampDate->Date = (uint8_t)(tmpdate & (RTC_DR_DT | RTC_DR_DU));
 381              		.loc 1 319 0
 382 0050 1040     		ands	r0, r2
 383 0052 A870     		strb	r0, [r5, #2]
 320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   sTimeStampDate->WeekDay = (uint8_t)((tmpdate & (RTC_DR_WDU)) >> 13U);
 384              		.loc 1 320 0
 385 0054 520B     		lsrs	r2, r2, #13
 386              	.LVL37:
 387 0056 0721     		movs	r1, #7
 388 0058 0A40     		ands	r2, r1
 389 005a 2A70     		strb	r2, [r5]
 321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Check the input parameters format */
 323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   if(Format == RTC_FORMAT_BIN)
 390              		.loc 1 323 0
 391 005c 4B46     		mov	r3, r9
 392 005e 002B     		cmp	r3, #0
 393 0060 0BD0     		beq	.L18
 394              	.L17:
 324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   {
 325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     /* Convert the TimeStamp structure parameters to Binary format */
 326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     sTimeStamp->Hours = (uint8_t)RTC_Bcd2ToByte(sTimeStamp->Hours);
 327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     sTimeStamp->Minutes = (uint8_t)RTC_Bcd2ToByte(sTimeStamp->Minutes);
 328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     sTimeStamp->Seconds = (uint8_t)RTC_Bcd2ToByte(sTimeStamp->Seconds);
 329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     /* Convert the DateTimeStamp structure parameters to Binary format */
 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     sTimeStampDate->Month = (uint8_t)RTC_Bcd2ToByte(sTimeStampDate->Month);
 332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     sTimeStampDate->Date = (uint8_t)RTC_Bcd2ToByte(sTimeStampDate->Date);
 333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     sTimeStampDate->WeekDay = (uint8_t)RTC_Bcd2ToByte(sTimeStampDate->WeekDay);
 334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   }
 335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Clear the TIMESTAMP Flag */
 337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_CLEAR_FLAG(hrtc, RTC_FLAG_TSF);
 395              		.loc 1 337 0
 396 0062 3168     		ldr	r1, [r6]
 397 0064 CA68     		ldr	r2, [r1, #12]
 398 0066 FF23     		movs	r3, #255
 399 0068 1A40     		ands	r2, r3
 400 006a 124B     		ldr	r3, .L19+8
 401 006c 1343     		orrs	r3, r2
 402 006e CB60     		str	r3, [r1, #12]
 338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   return HAL_OK;
 340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** }
 403              		.loc 1 340 0
 404 0070 0020     		movs	r0, #0
 405              		@ sp needed
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 14


 406              	.LVL38:
 407              	.LVL39:
 408              	.LVL40:
 409              	.LVL41:
 410 0072 0CBC     		pop	{r2, r3}
 411 0074 9046     		mov	r8, r2
 412 0076 9946     		mov	r9, r3
 413 0078 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 414              	.LVL42:
 415              	.L18:
 326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     sTimeStamp->Minutes = (uint8_t)RTC_Bcd2ToByte(sTimeStamp->Minutes);
 416              		.loc 1 326 0
 417 007a 2078     		ldrb	r0, [r4]
 418 007c FFF7FEFF 		bl	RTC_Bcd2ToByte
 419              	.LVL43:
 420 0080 2070     		strb	r0, [r4]
 327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     sTimeStamp->Seconds = (uint8_t)RTC_Bcd2ToByte(sTimeStamp->Seconds);
 421              		.loc 1 327 0
 422 0082 6078     		ldrb	r0, [r4, #1]
 423 0084 FFF7FEFF 		bl	RTC_Bcd2ToByte
 424              	.LVL44:
 425 0088 6070     		strb	r0, [r4, #1]
 328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 426              		.loc 1 328 0
 427 008a A078     		ldrb	r0, [r4, #2]
 428 008c FFF7FEFF 		bl	RTC_Bcd2ToByte
 429              	.LVL45:
 430 0090 A070     		strb	r0, [r4, #2]
 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     sTimeStampDate->Date = (uint8_t)RTC_Bcd2ToByte(sTimeStampDate->Date);
 431              		.loc 1 331 0
 432 0092 6878     		ldrb	r0, [r5, #1]
 433 0094 FFF7FEFF 		bl	RTC_Bcd2ToByte
 434              	.LVL46:
 435 0098 6870     		strb	r0, [r5, #1]
 332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     sTimeStampDate->WeekDay = (uint8_t)RTC_Bcd2ToByte(sTimeStampDate->WeekDay);
 436              		.loc 1 332 0
 437 009a A878     		ldrb	r0, [r5, #2]
 438 009c FFF7FEFF 		bl	RTC_Bcd2ToByte
 439              	.LVL47:
 440 00a0 A870     		strb	r0, [r5, #2]
 333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   }
 441              		.loc 1 333 0
 442 00a2 2878     		ldrb	r0, [r5]
 443 00a4 FFF7FEFF 		bl	RTC_Bcd2ToByte
 444              	.LVL48:
 445 00a8 2870     		strb	r0, [r5]
 446 00aa DAE7     		b	.L17
 447              	.L20:
 448              		.align	2
 449              	.L19:
 450 00ac 7F7F7F00 		.word	8355711
 451 00b0 3FFFFF00 		.word	16777023
 452 00b4 7FF7FFFF 		.word	-2177
 453              		.cfi_endproc
 454              	.LFE38:
 456              		.section	.text.HAL_RTCEx_SetTamper,"ax",%progbits
 457              		.align	1
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 15


 458              		.global	HAL_RTCEx_SetTamper
 459              		.syntax unified
 460              		.code	16
 461              		.thumb_func
 462              		.fpu softvfp
 464              	HAL_RTCEx_SetTamper:
 465              	.LFB39:
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** /**
 343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @brief  Set Tamper
 344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @note   By calling this API we disable the tamper interrupt for all tampers.
 345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  sTamper Pointer to Tamper Structure.
 347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @retval HAL status
 348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   */
 349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetTamper(RTC_HandleTypeDef *hrtc, RTC_TamperTypeDef* sTamper)
 350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** {
 466              		.loc 1 350 0
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 0
 469              		@ frame_needed = 0, uses_anonymous_args = 0
 470              	.LVL49:
 471 0000 30B5     		push	{r4, r5, lr}
 472              	.LCFI5:
 473              		.cfi_def_cfa_offset 12
 474              		.cfi_offset 4, -12
 475              		.cfi_offset 5, -8
 476              		.cfi_offset 14, -4
 477              	.LVL50:
 351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   uint32_t tmpreg = 0U;
 352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Check the parameters */
 354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER(sTamper->Tamper));
 355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TRIGGER(sTamper->Trigger));
 356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_FILTER(sTamper->Filter));
 357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_SAMPLING_FREQ(sTamper->SamplingFrequency));
 358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PRECHARGE_DURATION(sTamper->PrechargeDuration));
 359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PULLUP_STATE(sTamper->TamperPullUp));
 360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TIMESTAMPONTAMPER_DETECTION(sTamper->TimeStampOnTamperDetection));
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Process Locked */
 363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 478              		.loc 1 363 0
 479 0002 037F     		ldrb	r3, [r0, #28]
 480 0004 012B     		cmp	r3, #1
 481 0006 28D0     		beq	.L24
 482              		.loc 1 363 0 is_stmt 0 discriminator 2
 483 0008 0123     		movs	r3, #1
 484 000a 0377     		strb	r3, [r0, #28]
 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 485              		.loc 1 365 0 is_stmt 1 discriminator 2
 486 000c 0133     		adds	r3, r3, #1
 487 000e 4377     		strb	r3, [r0, #29]
 366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   if(sTamper->Trigger != RTC_TAMPERTRIGGER_RISINGEDGE)
 488              		.loc 1 367 0 discriminator 2
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 16


 489 0010 4B68     		ldr	r3, [r1, #4]
 490 0012 002B     		cmp	r3, #0
 491 0014 02D0     		beq	.L23
 368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   {
 369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     sTamper->Trigger = (uint32_t)(sTamper->Tamper << 1U);
 492              		.loc 1 369 0
 493 0016 0B68     		ldr	r3, [r1]
 494 0018 5B00     		lsls	r3, r3, #1
 495 001a 4B60     		str	r3, [r1, #4]
 496              	.L23:
 370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   }
 371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   tmpreg = ((uint32_t)sTamper->Tamper | (uint32_t)sTamper->Trigger | (uint32_t)sTamper->Filter |\
 497              		.loc 1 372 0
 498 001c 0A68     		ldr	r2, [r1]
 499 001e 4B68     		ldr	r3, [r1, #4]
 500 0020 1343     		orrs	r3, r2
 501 0022 8C68     		ldr	r4, [r1, #8]
 502 0024 2343     		orrs	r3, r4
 503 0026 CC68     		ldr	r4, [r1, #12]
 504 0028 2343     		orrs	r3, r4
 373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****             (uint32_t)sTamper->SamplingFrequency | (uint32_t)sTamper->PrechargeDuration |\
 505              		.loc 1 373 0
 506 002a 0C69     		ldr	r4, [r1, #16]
 507 002c 2343     		orrs	r3, r4
 508 002e 4C69     		ldr	r4, [r1, #20]
 509 0030 2343     		orrs	r3, r4
 374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****             (uint32_t)sTamper->TamperPullUp | sTamper->TimeStampOnTamperDetection);
 510              		.loc 1 374 0
 511 0032 8969     		ldr	r1, [r1, #24]
 512              	.LVL51:
 372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****             (uint32_t)sTamper->SamplingFrequency | (uint32_t)sTamper->PrechargeDuration |\
 513              		.loc 1 372 0
 514 0034 0B43     		orrs	r3, r1
 515              	.LVL52:
 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->Instance->TAFCR &= (uint32_t)~((uint32_t)sTamper->Tamper | (uint32_t)(sTamper->Tamper << 1U
 516              		.loc 1 376 0
 517 0036 0568     		ldr	r5, [r0]
 518 0038 296C     		ldr	r1, [r5, #64]
 519 003a 5400     		lsls	r4, r2, #1
 520 003c 2243     		orrs	r2, r4
 377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAFCR_TAMPFREQ | (uint32_t)RTC_TAFCR_TAMPFLT |
 378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAFCR_TAMPPUDIS | (uint32_t)RTC_TAFCR_TAMPIE);
 521              		.loc 1 378 0
 522 003e 084C     		ldr	r4, .L25
 523 0040 2243     		orrs	r2, r4
 376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAFCR_TAMPFREQ | (uint32_t)RTC_TAFCR_TAMPFLT |
 524              		.loc 1 376 0
 525 0042 9143     		bics	r1, r2
 526 0044 2964     		str	r1, [r5, #64]
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->Instance->TAFCR |= tmpreg;
 527              		.loc 1 380 0
 528 0046 0168     		ldr	r1, [r0]
 529 0048 0A6C     		ldr	r2, [r1, #64]
 530 004a 1343     		orrs	r3, r2
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 17


 531              	.LVL53:
 532 004c 0B64     		str	r3, [r1, #64]
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   
 382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY; 
 533              		.loc 1 382 0
 534 004e 0123     		movs	r3, #1
 535 0050 4377     		strb	r3, [r0, #29]
 383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Process Unlocked */
 385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 536              		.loc 1 385 0
 537 0052 0023     		movs	r3, #0
 538 0054 0377     		strb	r3, [r0, #28]
 386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   return HAL_OK;
 539              		.loc 1 387 0
 540 0056 0020     		movs	r0, #0
 541              	.LVL54:
 542              	.L22:
 388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** }
 543              		.loc 1 388 0
 544              		@ sp needed
 545 0058 30BD     		pop	{r4, r5, pc}
 546              	.LVL55:
 547              	.L24:
 363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 548              		.loc 1 363 0
 549 005a 0220     		movs	r0, #2
 550              	.LVL56:
 551 005c FCE7     		b	.L22
 552              	.L26:
 553 005e C046     		.align	2
 554              	.L25:
 555 0060 84FF0000 		.word	65412
 556              		.cfi_endproc
 557              	.LFE39:
 559              		.section	.text.HAL_RTCEx_SetTamper_IT,"ax",%progbits
 560              		.align	1
 561              		.global	HAL_RTCEx_SetTamper_IT
 562              		.syntax unified
 563              		.code	16
 564              		.thumb_func
 565              		.fpu softvfp
 567              	HAL_RTCEx_SetTamper_IT:
 568              	.LFB40:
 389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** /**
 391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @brief  Sets Tamper with interrupt.
 392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @note   By calling this API we force the tamper interrupt for all tampers.
 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
 394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *                the configuration information for RTC.
 395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  sTamper Pointer to RTC Tamper.
 396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @retval HAL status
 397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   */
 398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetTamper_IT(RTC_HandleTypeDef *hrtc, RTC_TamperTypeDef* sTamper)
 399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** {
 569              		.loc 1 399 0
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 18


 570              		.cfi_startproc
 571              		@ args = 0, pretend = 0, frame = 0
 572              		@ frame_needed = 0, uses_anonymous_args = 0
 573              	.LVL57:
 574 0000 30B5     		push	{r4, r5, lr}
 575              	.LCFI6:
 576              		.cfi_def_cfa_offset 12
 577              		.cfi_offset 4, -12
 578              		.cfi_offset 5, -8
 579              		.cfi_offset 14, -4
 580              	.LVL58:
 400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   uint32_t tmpreg = 0U;
 401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Check the parameters */
 403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER(sTamper->Tamper)); 
 404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TRIGGER(sTamper->Trigger));
 405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_FILTER(sTamper->Filter));
 406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_SAMPLING_FREQ(sTamper->SamplingFrequency));
 407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PRECHARGE_DURATION(sTamper->PrechargeDuration));
 408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PULLUP_STATE(sTamper->TamperPullUp));
 409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TIMESTAMPONTAMPER_DETECTION(sTamper->TimeStampOnTamperDetection));
 410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Process Locked */
 412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 581              		.loc 1 412 0
 582 0002 037F     		ldrb	r3, [r0, #28]
 583 0004 012B     		cmp	r3, #1
 584 0006 36D0     		beq	.L30
 585              		.loc 1 412 0 is_stmt 0 discriminator 2
 586 0008 0123     		movs	r3, #1
 587 000a 0377     		strb	r3, [r0, #28]
 413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 588              		.loc 1 414 0 is_stmt 1 discriminator 2
 589 000c 0133     		adds	r3, r3, #1
 590 000e 4377     		strb	r3, [r0, #29]
 415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Configure the tamper trigger */
 417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   if(sTamper->Trigger != RTC_TAMPERTRIGGER_RISINGEDGE)
 591              		.loc 1 417 0 discriminator 2
 592 0010 4B68     		ldr	r3, [r1, #4]
 593 0012 002B     		cmp	r3, #0
 594 0014 02D0     		beq	.L29
 418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   {
 419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     sTamper->Trigger = (uint32_t)(sTamper->Tamper << 1U);
 595              		.loc 1 419 0
 596 0016 0B68     		ldr	r3, [r1]
 597 0018 5B00     		lsls	r3, r3, #1
 598 001a 4B60     		str	r3, [r1, #4]
 599              	.L29:
 420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   }
 421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   tmpreg = ((uint32_t)sTamper->Tamper | (uint32_t)sTamper->Trigger | (uint32_t)sTamper->Filter |\
 600              		.loc 1 422 0
 601 001c 0A68     		ldr	r2, [r1]
 602 001e 4B68     		ldr	r3, [r1, #4]
 603 0020 1343     		orrs	r3, r2
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 19


 604 0022 8C68     		ldr	r4, [r1, #8]
 605 0024 2343     		orrs	r3, r4
 606 0026 CC68     		ldr	r4, [r1, #12]
 607 0028 2343     		orrs	r3, r4
 423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****             (uint32_t)sTamper->SamplingFrequency | (uint32_t)sTamper->PrechargeDuration |\
 608              		.loc 1 423 0
 609 002a 0C69     		ldr	r4, [r1, #16]
 610 002c 2343     		orrs	r3, r4
 611 002e 4C69     		ldr	r4, [r1, #20]
 612 0030 2343     		orrs	r3, r4
 424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****             (uint32_t)sTamper->TamperPullUp | sTamper->TimeStampOnTamperDetection);
 613              		.loc 1 424 0
 614 0032 8969     		ldr	r1, [r1, #24]
 615              	.LVL59:
 422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****             (uint32_t)sTamper->SamplingFrequency | (uint32_t)sTamper->PrechargeDuration |\
 616              		.loc 1 422 0
 617 0034 0B43     		orrs	r3, r1
 618              	.LVL60:
 425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->Instance->TAFCR &= (uint32_t)~((uint32_t)sTamper->Tamper | (uint32_t)(sTamper->Tamper << 1U
 619              		.loc 1 426 0
 620 0036 0568     		ldr	r5, [r0]
 621 0038 296C     		ldr	r1, [r5, #64]
 622 003a 5400     		lsls	r4, r2, #1
 623 003c 2243     		orrs	r2, r4
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAFCR_TAMPFREQ | (uint32_t)RTC_TAFCR_TAMPFLT |
 624              		.loc 1 427 0
 625 003e 0F4C     		ldr	r4, .L31
 626 0040 2243     		orrs	r2, r4
 426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAFCR_TAMPFREQ | (uint32_t)RTC_TAFCR_TAMPFLT |
 627              		.loc 1 426 0
 628 0042 9143     		bics	r1, r2
 629 0044 2964     		str	r1, [r5, #64]
 428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAFCR_TAMPPUDIS);
 429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->Instance->TAFCR |= tmpreg;
 630              		.loc 1 430 0
 631 0046 0168     		ldr	r1, [r0]
 632 0048 0A6C     		ldr	r2, [r1, #64]
 633 004a 1343     		orrs	r3, r2
 634              	.LVL61:
 635 004c 0B64     		str	r3, [r1, #64]
 431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Configure the Tamper Interrupt in the RTC_TAFCR */
 433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->Instance->TAFCR |= (uint32_t)RTC_TAFCR_TAMPIE;
 636              		.loc 1 433 0
 637 004e 0268     		ldr	r2, [r0]
 638 0050 136C     		ldr	r3, [r2, #64]
 639 0052 0421     		movs	r1, #4
 640 0054 0B43     		orrs	r3, r1
 641 0056 1364     		str	r3, [r2, #64]
 434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* RTC Tamper Interrupt Configuration: EXTI configuration */
 436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_IT();
 642              		.loc 1 436 0
 643 0058 094B     		ldr	r3, .L31+4
 644 005a 1968     		ldr	r1, [r3]
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 20


 645 005c 8022     		movs	r2, #128
 646 005e 1203     		lsls	r2, r2, #12
 647 0060 1143     		orrs	r1, r2
 648 0062 1960     		str	r1, [r3]
 437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   
 438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_RISING_EDGE();
 649              		.loc 1 438 0
 650 0064 9968     		ldr	r1, [r3, #8]
 651 0066 0A43     		orrs	r2, r1
 652 0068 9A60     		str	r2, [r3, #8]
 439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 653              		.loc 1 440 0
 654 006a 0123     		movs	r3, #1
 655 006c 4377     		strb	r3, [r0, #29]
 441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Process Unlocked */
 443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 656              		.loc 1 443 0
 657 006e 0023     		movs	r3, #0
 658 0070 0377     		strb	r3, [r0, #28]
 444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   return HAL_OK;
 659              		.loc 1 445 0
 660 0072 0020     		movs	r0, #0
 661              	.LVL62:
 662              	.L28:
 446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** }
 663              		.loc 1 446 0
 664              		@ sp needed
 665 0074 30BD     		pop	{r4, r5, pc}
 666              	.LVL63:
 667              	.L30:
 412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 668              		.loc 1 412 0
 669 0076 0220     		movs	r0, #2
 670              	.LVL64:
 671 0078 FCE7     		b	.L28
 672              	.L32:
 673 007a C046     		.align	2
 674              	.L31:
 675 007c 80FF0000 		.word	65408
 676 0080 00040140 		.word	1073808384
 677              		.cfi_endproc
 678              	.LFE40:
 680              		.section	.text.HAL_RTCEx_DeactivateTamper,"ax",%progbits
 681              		.align	1
 682              		.global	HAL_RTCEx_DeactivateTamper
 683              		.syntax unified
 684              		.code	16
 685              		.thumb_func
 686              		.fpu softvfp
 688              	HAL_RTCEx_DeactivateTamper:
 689              	.LFB41:
 447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** /**
 449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @brief  Deactivate Tamper.
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 21


 450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  Tamper Selected tamper pin.
 452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *          This parameter can be any combination of RTC_TAMPER_1, RTC_TAMPER_2 and RTC_TAMPER_3.
 453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @retval HAL status
 454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   */
 455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateTamper(RTC_HandleTypeDef *hrtc, uint32_t Tamper)
 456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** {
 690              		.loc 1 456 0
 691              		.cfi_startproc
 692              		@ args = 0, pretend = 0, frame = 0
 693              		@ frame_needed = 0, uses_anonymous_args = 0
 694              	.LVL65:
 695 0000 10B5     		push	{r4, lr}
 696              	.LCFI7:
 697              		.cfi_def_cfa_offset 8
 698              		.cfi_offset 4, -8
 699              		.cfi_offset 14, -4
 457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER(Tamper));
 458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Process Locked */
 460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 700              		.loc 1 460 0
 701 0002 037F     		ldrb	r3, [r0, #28]
 702 0004 012B     		cmp	r3, #1
 703 0006 0CD0     		beq	.L35
 704              		.loc 1 460 0 is_stmt 0 discriminator 2
 705 0008 0122     		movs	r2, #1
 706 000a 0277     		strb	r2, [r0, #28]
 461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 707              		.loc 1 462 0 is_stmt 1 discriminator 2
 708 000c 0223     		movs	r3, #2
 709 000e 4377     		strb	r3, [r0, #29]
 463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Disable the selected Tamper pin */
 465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->Instance->TAFCR &= (uint32_t)~Tamper;
 710              		.loc 1 465 0 discriminator 2
 711 0010 0468     		ldr	r4, [r0]
 712 0012 236C     		ldr	r3, [r4, #64]
 713 0014 8B43     		bics	r3, r1
 714 0016 2364     		str	r3, [r4, #64]
 466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 715              		.loc 1 467 0 discriminator 2
 716 0018 4277     		strb	r2, [r0, #29]
 468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Process Unlocked */
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 717              		.loc 1 470 0 discriminator 2
 718 001a 0023     		movs	r3, #0
 719 001c 0377     		strb	r3, [r0, #28]
 471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   return HAL_OK;
 720              		.loc 1 472 0 discriminator 2
 721 001e 0020     		movs	r0, #0
 722              	.LVL66:
 723              	.L34:
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 22


 473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** }
 724              		.loc 1 473 0
 725              		@ sp needed
 726 0020 10BD     		pop	{r4, pc}
 727              	.LVL67:
 728              	.L35:
 460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 729              		.loc 1 460 0
 730 0022 0220     		movs	r0, #2
 731              	.LVL68:
 732 0024 FCE7     		b	.L34
 733              		.cfi_endproc
 734              	.LFE41:
 736              		.section	.text.HAL_RTCEx_TimeStampEventCallback,"ax",%progbits
 737              		.align	1
 738              		.weak	HAL_RTCEx_TimeStampEventCallback
 739              		.syntax unified
 740              		.code	16
 741              		.thumb_func
 742              		.fpu softvfp
 744              	HAL_RTCEx_TimeStampEventCallback:
 745              	.LFB43:
 474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** /**
 476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @brief  Handle TimeStamp interrupt request.
 477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @retval None
 479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   */
 480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** void HAL_RTCEx_TamperTimeStampIRQHandler(RTC_HandleTypeDef *hrtc)
 481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** {  
 482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Get the TimeStamp interrupt source enable status */
 483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   if(__HAL_RTC_TIMESTAMP_GET_IT_SOURCE(hrtc, RTC_IT_TS) != RESET)
 484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   {
 485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     /* Get the pending status of the TIMESTAMP Interrupt */
 486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     if(__HAL_RTC_TIMESTAMP_GET_FLAG(hrtc, RTC_FLAG_TSF) != RESET)
 487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     {
 488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       /* TIMESTAMP callback */ 
 489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       HAL_RTCEx_TimeStampEventCallback(hrtc);
 490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       
 491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       /* Clear the TIMESTAMP interrupt pending bit */
 492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       __HAL_RTC_TIMESTAMP_CLEAR_FLAG(hrtc, RTC_FLAG_TSF);
 493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     }
 494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   }
 495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Get the Tamper interrupts source enable status */
 497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   if(__HAL_RTC_TAMPER_GET_IT_SOURCE(hrtc, RTC_IT_TAMP))
 498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   {
 499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****    /* Get the pending status of the Tamper1 Interrupt */
 500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     if(__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP1F) != RESET)
 501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     {
 502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       /* Tamper1 callback */
 503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       HAL_RTCEx_Tamper1EventCallback(hrtc);
 504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       /* Clear the Tamper1 interrupt pending bit */
 506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc, RTC_FLAG_TAMP1F);
 507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     }
 508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   }
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 23


 509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Get the Tamper interrupts source enable status */
 511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   if(__HAL_RTC_TAMPER_GET_IT_SOURCE(hrtc, RTC_IT_TAMP))
 512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   {
 513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****    /* Get the pending status of the Tamper2 Interrupt */
 514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     if(__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP2F) != RESET)
 515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     {
 516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       /* Tamper2 callback */
 517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       HAL_RTCEx_Tamper2EventCallback(hrtc);
 518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       /* Clear the Tamper2 interrupt pending bit */
 520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc, RTC_FLAG_TAMP2F);
 521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     }
 522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   }
 523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** #if defined(STM32F071xB) || defined(STM32F072xB) || defined(STM32F078xx) || defined(STM32F091xC) ||
 525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Get the Tamper interrupts source enable status */
 526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   if(__HAL_RTC_TAMPER_GET_IT_SOURCE(hrtc, RTC_IT_TAMP))
 527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   {
 528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****    /* Get the pending status of the Tamper3 Interrupt */
 529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     if(__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP3F) != RESET)
 530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     {
 531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       /* Tamper3 callback */
 532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       HAL_RTCEx_Tamper3EventCallback(hrtc);
 533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       /* Clear the Tamper3 interrupt pending bit */
 535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc, RTC_FLAG_TAMP3F);
 536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     }
 537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   }
 538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** #endif
 539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Clear the EXTI's Flag for RTC TimeStamp and Tamper */
 541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_CLEAR_FLAG();
 542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Change RTC state */
 544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** }
 546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** /**
 548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @brief  TimeStamp callback. 
 549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @retval None
 551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   */
 552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_TimeStampEventCallback(RTC_HandleTypeDef *hrtc)
 553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** {
 746              		.loc 1 553 0
 747              		.cfi_startproc
 748              		@ args = 0, pretend = 0, frame = 0
 749              		@ frame_needed = 0, uses_anonymous_args = 0
 750              		@ link register save eliminated.
 751              	.LVL69:
 554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   UNUSED(hrtc);
 556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****             the HAL_RTCEx_TimeStampEventCallback could be implemented in the user file
 559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   */
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 24


 560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** }
 752              		.loc 1 560 0
 753              		@ sp needed
 754 0000 7047     		bx	lr
 755              		.cfi_endproc
 756              	.LFE43:
 758              		.section	.text.HAL_RTCEx_Tamper1EventCallback,"ax",%progbits
 759              		.align	1
 760              		.weak	HAL_RTCEx_Tamper1EventCallback
 761              		.syntax unified
 762              		.code	16
 763              		.thumb_func
 764              		.fpu softvfp
 766              	HAL_RTCEx_Tamper1EventCallback:
 767              	.LFB44:
 561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** /**
 563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @brief  Tamper 1 callback.
 564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @retval None
 566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   */
 567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_Tamper1EventCallback(RTC_HandleTypeDef *hrtc)
 568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** {
 768              		.loc 1 568 0
 769              		.cfi_startproc
 770              		@ args = 0, pretend = 0, frame = 0
 771              		@ frame_needed = 0, uses_anonymous_args = 0
 772              		@ link register save eliminated.
 773              	.LVL70:
 569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   UNUSED(hrtc);
 571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****             the HAL_RTCEx_Tamper1EventCallback could be implemented in the user file
 574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****    */
 575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** }
 774              		.loc 1 575 0
 775              		@ sp needed
 776 0000 7047     		bx	lr
 777              		.cfi_endproc
 778              	.LFE44:
 780              		.section	.text.HAL_RTCEx_Tamper2EventCallback,"ax",%progbits
 781              		.align	1
 782              		.weak	HAL_RTCEx_Tamper2EventCallback
 783              		.syntax unified
 784              		.code	16
 785              		.thumb_func
 786              		.fpu softvfp
 788              	HAL_RTCEx_Tamper2EventCallback:
 789              	.LFB45:
 576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** /**
 578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @brief  Tamper 2 callback. 
 579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @retval None
 581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   */
 582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_Tamper2EventCallback(RTC_HandleTypeDef *hrtc)
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 25


 583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** {
 790              		.loc 1 583 0
 791              		.cfi_startproc
 792              		@ args = 0, pretend = 0, frame = 0
 793              		@ frame_needed = 0, uses_anonymous_args = 0
 794              		@ link register save eliminated.
 795              	.LVL71:
 584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   UNUSED(hrtc);
 586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****             the HAL_RTCEx_Tamper2EventCallback could be implemented in the user file
 589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****    */
 590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** }
 796              		.loc 1 590 0
 797              		@ sp needed
 798 0000 7047     		bx	lr
 799              		.cfi_endproc
 800              	.LFE45:
 802              		.section	.text.HAL_RTCEx_TamperTimeStampIRQHandler,"ax",%progbits
 803              		.align	1
 804              		.global	HAL_RTCEx_TamperTimeStampIRQHandler
 805              		.syntax unified
 806              		.code	16
 807              		.thumb_func
 808              		.fpu softvfp
 810              	HAL_RTCEx_TamperTimeStampIRQHandler:
 811              	.LFB42:
 481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Get the TimeStamp interrupt source enable status */
 812              		.loc 1 481 0
 813              		.cfi_startproc
 814              		@ args = 0, pretend = 0, frame = 0
 815              		@ frame_needed = 0, uses_anonymous_args = 0
 816              	.LVL72:
 817 0000 10B5     		push	{r4, lr}
 818              	.LCFI8:
 819              		.cfi_def_cfa_offset 8
 820              		.cfi_offset 4, -8
 821              		.cfi_offset 14, -4
 822 0002 0400     		movs	r4, r0
 483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   {
 823              		.loc 1 483 0
 824 0004 0368     		ldr	r3, [r0]
 825 0006 9A68     		ldr	r2, [r3, #8]
 826 0008 1204     		lsls	r2, r2, #16
 827 000a 02D5     		bpl	.L40
 486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     {
 828              		.loc 1 486 0
 829 000c DB68     		ldr	r3, [r3, #12]
 830 000e 1B05     		lsls	r3, r3, #20
 831 0010 14D4     		bmi	.L43
 832              	.LVL73:
 833              	.L40:
 497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   {
 834              		.loc 1 497 0
 835 0012 2368     		ldr	r3, [r4]
 836 0014 1A6C     		ldr	r2, [r3, #64]
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 26


 837 0016 5207     		lsls	r2, r2, #29
 838 0018 02D5     		bpl	.L41
 500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     {
 839              		.loc 1 500 0
 840 001a DB68     		ldr	r3, [r3, #12]
 841 001c 9B04     		lsls	r3, r3, #18
 842 001e 17D4     		bmi	.L44
 843              	.L41:
 511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   {
 844              		.loc 1 511 0
 845 0020 2368     		ldr	r3, [r4]
 846 0022 1A6C     		ldr	r2, [r3, #64]
 847 0024 5207     		lsls	r2, r2, #29
 848 0026 02D5     		bpl	.L42
 514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     {
 849              		.loc 1 514 0
 850 0028 DB68     		ldr	r3, [r3, #12]
 851 002a 5B04     		lsls	r3, r3, #17
 852 002c 1BD4     		bmi	.L45
 853              	.L42:
 541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 854              		.loc 1 541 0
 855 002e 134B     		ldr	r3, .L46
 856 0030 8022     		movs	r2, #128
 857 0032 1203     		lsls	r2, r2, #12
 858 0034 5A61     		str	r2, [r3, #20]
 544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** }
 859              		.loc 1 544 0
 860 0036 0123     		movs	r3, #1
 861 0038 6377     		strb	r3, [r4, #29]
 545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 862              		.loc 1 545 0
 863              		@ sp needed
 864              	.LVL74:
 865 003a 10BD     		pop	{r4, pc}
 866              	.LVL75:
 867              	.L43:
 489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       
 868              		.loc 1 489 0
 869 003c FFF7FEFF 		bl	HAL_RTCEx_TimeStampEventCallback
 870              	.LVL76:
 492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     }
 871              		.loc 1 492 0
 872 0040 2168     		ldr	r1, [r4]
 873 0042 CA68     		ldr	r2, [r1, #12]
 874 0044 FF23     		movs	r3, #255
 875 0046 1A40     		ands	r2, r3
 876 0048 0D4B     		ldr	r3, .L46+4
 877 004a 1343     		orrs	r3, r2
 878 004c CB60     		str	r3, [r1, #12]
 879 004e E0E7     		b	.L40
 880              	.L44:
 503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 881              		.loc 1 503 0
 882 0050 2000     		movs	r0, r4
 883 0052 FFF7FEFF 		bl	HAL_RTCEx_Tamper1EventCallback
 884              	.LVL77:
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 27


 506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     }
 885              		.loc 1 506 0
 886 0056 2168     		ldr	r1, [r4]
 887 0058 CA68     		ldr	r2, [r1, #12]
 888 005a FF23     		movs	r3, #255
 889 005c 1A40     		ands	r2, r3
 890 005e 094B     		ldr	r3, .L46+8
 891 0060 1343     		orrs	r3, r2
 892 0062 CB60     		str	r3, [r1, #12]
 893 0064 DCE7     		b	.L41
 894              	.L45:
 517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 895              		.loc 1 517 0
 896 0066 2000     		movs	r0, r4
 897 0068 FFF7FEFF 		bl	HAL_RTCEx_Tamper2EventCallback
 898              	.LVL78:
 520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     }
 899              		.loc 1 520 0
 900 006c 2168     		ldr	r1, [r4]
 901 006e CA68     		ldr	r2, [r1, #12]
 902 0070 FF23     		movs	r3, #255
 903 0072 1A40     		ands	r2, r3
 904 0074 044B     		ldr	r3, .L46+12
 905 0076 1343     		orrs	r3, r2
 906 0078 CB60     		str	r3, [r1, #12]
 907 007a D8E7     		b	.L42
 908              	.L47:
 909              		.align	2
 910              	.L46:
 911 007c 00040140 		.word	1073808384
 912 0080 7FF7FFFF 		.word	-2177
 913 0084 7FDFFFFF 		.word	-8321
 914 0088 7FBFFFFF 		.word	-16513
 915              		.cfi_endproc
 916              	.LFE42:
 918              		.section	.text.HAL_RTCEx_PollForTimeStampEvent,"ax",%progbits
 919              		.align	1
 920              		.global	HAL_RTCEx_PollForTimeStampEvent
 921              		.syntax unified
 922              		.code	16
 923              		.thumb_func
 924              		.fpu softvfp
 926              	HAL_RTCEx_PollForTimeStampEvent:
 927              	.LFB46:
 591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** #if defined(STM32F071xB) || defined(STM32F072xB) || defined(STM32F078xx) || defined(STM32F091xC) ||
 593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** /**
 594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @brief  Tamper 3 callback. 
 595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @retval None
 597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   */
 598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_Tamper3EventCallback(RTC_HandleTypeDef *hrtc)
 599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** {
 600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   UNUSED(hrtc);
 602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 28


 604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****             the HAL_RTCEx_Tamper3EventCallback could be implemented in the user file
 605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****    */
 606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** }
 607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** #endif
 608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** /**
 610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @brief  Handle TimeStamp polling request.
 611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
 613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @retval HAL status
 614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   */
 615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForTimeStampEvent(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
 616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** { 
 928              		.loc 1 616 0
 929              		.cfi_startproc
 930              		@ args = 0, pretend = 0, frame = 0
 931              		@ frame_needed = 0, uses_anonymous_args = 0
 932              	.LVL79:
 933 0000 70B5     		push	{r4, r5, r6, lr}
 934              	.LCFI9:
 935              		.cfi_def_cfa_offset 16
 936              		.cfi_offset 4, -16
 937              		.cfi_offset 5, -12
 938              		.cfi_offset 6, -8
 939              		.cfi_offset 14, -4
 940 0002 0500     		movs	r5, r0
 941 0004 0E00     		movs	r6, r1
 617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
 942              		.loc 1 617 0
 943 0006 FFF7FEFF 		bl	HAL_GetTick
 944              	.LVL80:
 945 000a 0400     		movs	r4, r0
 946              	.LVL81:
 947              	.L53:
 618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   while(__HAL_RTC_TIMESTAMP_GET_FLAG(hrtc, RTC_FLAG_TSF) == RESET)
 948              		.loc 1 619 0
 949 000c 2B68     		ldr	r3, [r5]
 950 000e DA68     		ldr	r2, [r3, #12]
 951 0010 1205     		lsls	r2, r2, #20
 952 0012 0FD4     		bmi	.L56
 620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   {
 621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     if(__HAL_RTC_TIMESTAMP_GET_FLAG(hrtc, RTC_FLAG_TSOVF) != RESET)
 953              		.loc 1 621 0
 954 0014 DA68     		ldr	r2, [r3, #12]
 955 0016 D204     		lsls	r2, r2, #19
 956 0018 10D4     		bmi	.L51
 622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     {
 623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       /* Clear the TIMESTAMP OverRun Flag */
 624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       __HAL_RTC_TIMESTAMP_CLEAR_FLAG(hrtc, RTC_FLAG_TSOVF);
 625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       /* Change TIMESTAMP state */
 627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       hrtc->State = HAL_RTC_STATE_ERROR;
 628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       return HAL_ERROR;
 630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     }
 631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 29


 632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
 957              		.loc 1 632 0
 958 001a 731C     		adds	r3, r6, #1
 959 001c F6D0     		beq	.L53
 633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     {
 634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       if((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 960              		.loc 1 634 0
 961 001e 002E     		cmp	r6, #0
 962 0020 04D0     		beq	.L54
 963              		.loc 1 634 0 is_stmt 0 discriminator 2
 964 0022 FFF7FEFF 		bl	HAL_GetTick
 965              	.LVL82:
 966 0026 001B     		subs	r0, r0, r4
 967 0028 B042     		cmp	r0, r6
 968 002a EFD9     		bls	.L53
 969              	.L54:
 635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       {
 636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 970              		.loc 1 636 0 is_stmt 1 discriminator 3
 971 002c 0323     		movs	r3, #3
 972 002e 6B77     		strb	r3, [r5, #29]
 637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 973              		.loc 1 637 0 discriminator 3
 974 0030 0320     		movs	r0, #3
 975 0032 02E0     		b	.L50
 976              	.L56:
 638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       }
 639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     }
 640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   }
 641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Change RTC state */
 643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 977              		.loc 1 643 0
 978 0034 0123     		movs	r3, #1
 979 0036 6B77     		strb	r3, [r5, #29]
 644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   
 645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   return HAL_OK;
 980              		.loc 1 645 0
 981 0038 0020     		movs	r0, #0
 982              	.L50:
 646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** }
 983              		.loc 1 646 0
 984              		@ sp needed
 985              	.LVL83:
 986              	.LVL84:
 987              	.LVL85:
 988 003a 70BD     		pop	{r4, r5, r6, pc}
 989              	.LVL86:
 990              	.L51:
 624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 991              		.loc 1 624 0
 992 003c D968     		ldr	r1, [r3, #12]
 993 003e FF22     		movs	r2, #255
 994 0040 1140     		ands	r1, r2
 995 0042 034A     		ldr	r2, .L57
 996 0044 0A43     		orrs	r2, r1
 997 0046 DA60     		str	r2, [r3, #12]
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 30


 627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 998              		.loc 1 627 0
 999 0048 0423     		movs	r3, #4
 1000 004a 6B77     		strb	r3, [r5, #29]
 629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     }
 1001              		.loc 1 629 0
 1002 004c 0120     		movs	r0, #1
 1003 004e F4E7     		b	.L50
 1004              	.L58:
 1005              		.align	2
 1006              	.L57:
 1007 0050 7FEFFFFF 		.word	-4225
 1008              		.cfi_endproc
 1009              	.LFE46:
 1011              		.section	.text.HAL_RTCEx_PollForTamper1Event,"ax",%progbits
 1012              		.align	1
 1013              		.global	HAL_RTCEx_PollForTamper1Event
 1014              		.syntax unified
 1015              		.code	16
 1016              		.thumb_func
 1017              		.fpu softvfp
 1019              	HAL_RTCEx_PollForTamper1Event:
 1020              	.LFB47:
 647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** /**
 649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @brief  Handle Tamper 1 Polling.
 650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
 652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @retval HAL status
 653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   */
 654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForTamper1Event(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
 655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** {
 1021              		.loc 1 655 0
 1022              		.cfi_startproc
 1023              		@ args = 0, pretend = 0, frame = 0
 1024              		@ frame_needed = 0, uses_anonymous_args = 0
 1025              	.LVL87:
 1026 0000 70B5     		push	{r4, r5, r6, lr}
 1027              	.LCFI10:
 1028              		.cfi_def_cfa_offset 16
 1029              		.cfi_offset 4, -16
 1030              		.cfi_offset 5, -12
 1031              		.cfi_offset 6, -8
 1032              		.cfi_offset 14, -4
 1033 0002 0400     		movs	r4, r0
 1034 0004 0D00     		movs	r5, r1
 656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
 1035              		.loc 1 656 0
 1036 0006 FFF7FEFF 		bl	HAL_GetTick
 1037              	.LVL88:
 1038 000a 0600     		movs	r6, r0
 1039              	.LVL89:
 1040              	.L62:
 657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Get the status of the Interrupt */
 659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   while(__HAL_RTC_TAMPER_GET_FLAG(hrtc,RTC_FLAG_TAMP1F)== RESET)
 1041              		.loc 1 659 0
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 31


 1042 000c 2368     		ldr	r3, [r4]
 1043 000e DA68     		ldr	r2, [r3, #12]
 1044 0010 9204     		lsls	r2, r2, #18
 1045 0012 0CD4     		bmi	.L65
 660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   {
 661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
 1046              		.loc 1 661 0
 1047 0014 6B1C     		adds	r3, r5, #1
 1048 0016 F9D0     		beq	.L62
 662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     {
 663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       if((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 1049              		.loc 1 663 0
 1050 0018 002D     		cmp	r5, #0
 1051 001a 04D0     		beq	.L63
 1052              		.loc 1 663 0 is_stmt 0 discriminator 2
 1053 001c FFF7FEFF 		bl	HAL_GetTick
 1054              	.LVL90:
 1055 0020 801B     		subs	r0, r0, r6
 1056 0022 A842     		cmp	r0, r5
 1057 0024 F2D9     		bls	.L62
 1058              	.L63:
 664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       {
 665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 1059              		.loc 1 665 0 is_stmt 1 discriminator 3
 1060 0026 0323     		movs	r3, #3
 1061 0028 6377     		strb	r3, [r4, #29]
 666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 1062              		.loc 1 666 0 discriminator 3
 1063 002a 0320     		movs	r0, #3
 1064 002c 08E0     		b	.L61
 1065              	.L65:
 667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       }
 668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     }
 669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   }
 670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Clear the Tamper Flag */
 672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc,RTC_FLAG_TAMP1F);
 1066              		.loc 1 672 0
 1067 002e D968     		ldr	r1, [r3, #12]
 1068 0030 FF22     		movs	r2, #255
 1069 0032 1140     		ands	r1, r2
 1070 0034 034A     		ldr	r2, .L66
 1071 0036 0A43     		orrs	r2, r1
 1072 0038 DA60     		str	r2, [r3, #12]
 673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   
 674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Change RTC state */
 675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1073              		.loc 1 675 0
 1074 003a 0123     		movs	r3, #1
 1075 003c 6377     		strb	r3, [r4, #29]
 676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   
 677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   return HAL_OK; 
 1076              		.loc 1 677 0
 1077 003e 0020     		movs	r0, #0
 1078              	.L61:
 678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** }
 1079              		.loc 1 678 0
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 32


 1080              		@ sp needed
 1081              	.LVL91:
 1082              	.LVL92:
 1083              	.LVL93:
 1084 0040 70BD     		pop	{r4, r5, r6, pc}
 1085              	.L67:
 1086 0042 C046     		.align	2
 1087              	.L66:
 1088 0044 7FDFFFFF 		.word	-8321
 1089              		.cfi_endproc
 1090              	.LFE47:
 1092              		.section	.text.HAL_RTCEx_PollForTamper2Event,"ax",%progbits
 1093              		.align	1
 1094              		.global	HAL_RTCEx_PollForTamper2Event
 1095              		.syntax unified
 1096              		.code	16
 1097              		.thumb_func
 1098              		.fpu softvfp
 1100              	HAL_RTCEx_PollForTamper2Event:
 1101              	.LFB48:
 679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** /**
 681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @brief  Handle Tamper 2 Polling.
 682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
 684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @retval HAL status
 685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   */
 686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForTamper2Event(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
 687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** {
 1102              		.loc 1 687 0
 1103              		.cfi_startproc
 1104              		@ args = 0, pretend = 0, frame = 0
 1105              		@ frame_needed = 0, uses_anonymous_args = 0
 1106              	.LVL94:
 1107 0000 70B5     		push	{r4, r5, r6, lr}
 1108              	.LCFI11:
 1109              		.cfi_def_cfa_offset 16
 1110              		.cfi_offset 4, -16
 1111              		.cfi_offset 5, -12
 1112              		.cfi_offset 6, -8
 1113              		.cfi_offset 14, -4
 1114 0002 0400     		movs	r4, r0
 1115 0004 0D00     		movs	r5, r1
 688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
 1116              		.loc 1 688 0
 1117 0006 FFF7FEFF 		bl	HAL_GetTick
 1118              	.LVL95:
 1119 000a 0600     		movs	r6, r0
 1120              	.LVL96:
 1121              	.L71:
 689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Get the status of the Interrupt */
 691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   while(__HAL_RTC_TAMPER_GET_FLAG(hrtc,RTC_FLAG_TAMP2F) == RESET)
 1122              		.loc 1 691 0
 1123 000c 2368     		ldr	r3, [r4]
 1124 000e DA68     		ldr	r2, [r3, #12]
 1125 0010 5204     		lsls	r2, r2, #17
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 33


 1126 0012 0CD4     		bmi	.L74
 692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   {
 693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
 1127              		.loc 1 693 0
 1128 0014 6B1C     		adds	r3, r5, #1
 1129 0016 F9D0     		beq	.L71
 694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     {
 695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       if((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 1130              		.loc 1 695 0
 1131 0018 002D     		cmp	r5, #0
 1132 001a 04D0     		beq	.L72
 1133              		.loc 1 695 0 is_stmt 0 discriminator 2
 1134 001c FFF7FEFF 		bl	HAL_GetTick
 1135              	.LVL97:
 1136 0020 801B     		subs	r0, r0, r6
 1137 0022 A842     		cmp	r0, r5
 1138 0024 F2D9     		bls	.L71
 1139              	.L72:
 696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       {
 697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 1140              		.loc 1 697 0 is_stmt 1 discriminator 3
 1141 0026 0323     		movs	r3, #3
 1142 0028 6377     		strb	r3, [r4, #29]
 698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 1143              		.loc 1 698 0 discriminator 3
 1144 002a 0320     		movs	r0, #3
 1145 002c 08E0     		b	.L70
 1146              	.L74:
 699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       }
 700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     }
 701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   }
 702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Clear the Tamper Flag */
 704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc,RTC_FLAG_TAMP2F);
 1147              		.loc 1 704 0
 1148 002e D968     		ldr	r1, [r3, #12]
 1149 0030 FF22     		movs	r2, #255
 1150 0032 1140     		ands	r1, r2
 1151 0034 034A     		ldr	r2, .L75
 1152 0036 0A43     		orrs	r2, r1
 1153 0038 DA60     		str	r2, [r3, #12]
 705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Change RTC state */
 707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1154              		.loc 1 707 0
 1155 003a 0123     		movs	r3, #1
 1156 003c 6377     		strb	r3, [r4, #29]
 708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   return HAL_OK;
 1157              		.loc 1 709 0
 1158 003e 0020     		movs	r0, #0
 1159              	.L70:
 710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** }
 1160              		.loc 1 710 0
 1161              		@ sp needed
 1162              	.LVL98:
 1163              	.LVL99:
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 34


 1164              	.LVL100:
 1165 0040 70BD     		pop	{r4, r5, r6, pc}
 1166              	.L76:
 1167 0042 C046     		.align	2
 1168              	.L75:
 1169 0044 7FBFFFFF 		.word	-16513
 1170              		.cfi_endproc
 1171              	.LFE48:
 1173              		.section	.text.HAL_RTCEx_BKUPWrite,"ax",%progbits
 1174              		.align	1
 1175              		.global	HAL_RTCEx_BKUPWrite
 1176              		.syntax unified
 1177              		.code	16
 1178              		.thumb_func
 1179              		.fpu softvfp
 1181              	HAL_RTCEx_BKUPWrite:
 1182              	.LFB49:
 711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** #if defined(STM32F071xB) || defined(STM32F072xB) || defined(STM32F078xx) || defined(STM32F091xC) ||
 713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** /**
 714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @brief  Handle Tamper 3 Polling.
 715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
 717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @retval HAL status
 718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   */
 719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForTamper3Event(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
 720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** {  
 721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
 722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Get the status of the Interrupt */
 724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   while(__HAL_RTC_TAMPER_GET_FLAG(hrtc,RTC_FLAG_TAMP3F) == RESET)
 725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   {
 726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
 727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     {
 728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       if((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       {
 730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       }
 733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     }
 734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   }
 735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Clear the Tamper Flag */
 737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc,RTC_FLAG_TAMP3F);
 738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Change RTC state */
 740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   return HAL_OK;
 743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** }
 744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** #endif
 745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** /**
 747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @}
 748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   */
 749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   
 750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** #if defined(STM32F070xB) || defined(STM32F071xB) || defined(STM32F072xB) || defined(STM32F078xx) ||
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 35


 751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions_Group2
 752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @brief    RTC Wake-up functions
 753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *
 754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** @verbatim   
 755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****  ===============================================================================
 756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****                         ##### RTC Wake-up functions #####
 757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****  ===============================================================================  
 758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****  
 759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****  [..] This section provides functions allowing to configure Wake-up feature
 760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** @endverbatim
 762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @{
 763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   */
 764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** /**
 766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @brief  Set wake up timer.
 767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  WakeUpCounter Wake up counter
 769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  WakeUpClock Wake up clock
 770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @retval HAL status
 771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   */
 772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetWakeUpTimer(RTC_HandleTypeDef *hrtc, uint32_t WakeUpCounter, uint32_
 773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** {
 774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   uint32_t tickstart = 0U;
 775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Check the parameters */
 777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   assert_param(IS_RTC_WAKEUP_CLOCK(WakeUpClock));
 778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   assert_param(IS_RTC_WAKEUP_COUNTER(WakeUpCounter));
 779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Process Locked */
 781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /*Check RTC WUTWF flag is reset only when wake up timer enabled*/
 789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   if((hrtc->Instance->CR & RTC_CR_WUTE) != RESET){
 790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     tickstart = HAL_GetTick();
 791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****    /* Wait till RTC WUTWF flag is reset and if Time out is reached exit */
 793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****    while(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTWF) == SET)
 794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****    {
 795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
 796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       {
 797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****        /* Enable the write protection for RTC registers */
 798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****        __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****        hrtc->State = HAL_RTC_STATE_TIMEOUT;
 801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****        /* Process Unlocked */ 
 803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****        __HAL_UNLOCK(hrtc);
 804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****        return HAL_TIMEOUT;
 806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       }
 807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     }
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 36


 808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   }
 809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_DISABLE(hrtc);
 811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Wait till RTC WUTWF flag is set and if Time out is reached exit */
 815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   while(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTWF) == RESET)
 816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   {
 817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     if((HAL_GetTick()-tickstart) > RTC_TIMEOUT_VALUE)
 818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     {
 819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       /* Enable the write protection for RTC registers */
 820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       hrtc->State = HAL_RTC_STATE_TIMEOUT;
 823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       /* Process Unlocked */
 825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       __HAL_UNLOCK(hrtc);
 826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       return HAL_TIMEOUT;
 828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     }
 829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   }
 830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Clear the Wakeup Timer clock source bits in CR register */
 832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->Instance->CR &= (uint32_t)~RTC_CR_WUCKSEL;
 833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Configure the clock source */
 835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->Instance->CR |= (uint32_t)WakeUpClock;
 836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Configure the Wakeup Timer counter */
 838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->Instance->WUTR = (uint32_t)WakeUpCounter;
 839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****    /* Enable the Wakeup Timer */
 841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_ENABLE(hrtc);
 842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Process Unlocked */
 849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   return HAL_OK;
 852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** }
 853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** /**
 855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @brief  Set wake up timer with interrupt.
 856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  WakeUpCounter Wake up counter
 858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  WakeUpClock Wake up clock  
 859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @retval HAL status
 860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   */
 861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetWakeUpTimer_IT(RTC_HandleTypeDef *hrtc, uint32_t WakeUpCounter, uint
 862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** {
 863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   uint32_t tickstart = 0U;
 864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 37


 865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Check the parameters */
 866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   assert_param(IS_RTC_WAKEUP_CLOCK(WakeUpClock));
 867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   assert_param(IS_RTC_WAKEUP_COUNTER(WakeUpCounter));
 868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Process Locked */
 870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /*Check RTC WUTWF flag is reset only when wake up timer enabled*/
 878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   if((hrtc->Instance->CR & RTC_CR_WUTE) != RESET){
 879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     tickstart = HAL_GetTick();
 880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****    /* Wait till RTC WUTWF flag is reset and if Time out is reached exit */
 882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****    while(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTWF) == SET)
 883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****    {
 884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
 885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       {
 886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****        /* Enable the write protection for RTC registers */
 887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****        __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****        hrtc->State = HAL_RTC_STATE_TIMEOUT;
 890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****        /* Process Unlocked */ 
 892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****        __HAL_UNLOCK(hrtc);
 893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****        return HAL_TIMEOUT;
 895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       }
 896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     }
 897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   }
 898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Disable the Wake-Up timer */
 900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_DISABLE(hrtc);
 901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Clear flag Wake-Up */
 903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_CLEAR_FLAG(hrtc, RTC_FLAG_WUTF);
 904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
 906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Wait till RTC WUTWF flag is set and if Time out is reached exit */
 908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   while(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTWF) == RESET)
 909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   {
 910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     if((HAL_GetTick()-tickstart) > RTC_TIMEOUT_VALUE)
 911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     {
 912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       /* Enable the write protection for RTC registers */
 913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       hrtc->State = HAL_RTC_STATE_TIMEOUT;
 916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       /* Process Unlocked */
 918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       __HAL_UNLOCK(hrtc);
 919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       return HAL_TIMEOUT;
 921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     }
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 38


 922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   }
 923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Configure the Wakeup Timer counter */
 925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->Instance->WUTR = (uint32_t)WakeUpCounter;
 926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Clear the Wakeup Timer clock source bits in CR register */
 928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->Instance->CR &= (uint32_t)~RTC_CR_WUCKSEL;
 929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Configure the clock source */
 931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->Instance->CR |= (uint32_t)WakeUpClock;
 932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* RTC WakeUpTimer Interrupt Configuration: EXTI configuration */
 934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_EXTI_ENABLE_IT();
 935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_EXTI_ENABLE_RISING_EDGE();
 937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Configure the Interrupt in the RTC_CR register */
 939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_ENABLE_IT(hrtc,RTC_IT_WUT);
 940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   
 941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Enable the Wakeup Timer */
 942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_ENABLE(hrtc);
 943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Process Unlocked */
 950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   return HAL_OK;
 953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** }
 954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** /**
 956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @brief  Deactivate wake up timer counter.
 957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle 
 958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @retval HAL status
 959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   */
 960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** uint32_t HAL_RTCEx_DeactivateWakeUpTimer(RTC_HandleTypeDef *hrtc)
 961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** {
 962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   uint32_t tickstart = 0U;
 963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Process Locked */
 965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Disable the Wakeup Timer */
 973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_DISABLE(hrtc);
 974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* In case of interrupt mode is used, the interrupt source must disabled */
 976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_DISABLE_IT(hrtc,RTC_IT_WUT);
 977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 39


 979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Wait till RTC WUTWF flag is set and if Time out is reached exit */
 980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   while(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTWF) == RESET)
 981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   {
 982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     if((HAL_GetTick()-tickstart) > RTC_TIMEOUT_VALUE)
 983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     {
 984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       /* Enable the write protection for RTC registers */
 985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       hrtc->State = HAL_RTC_STATE_TIMEOUT;
 988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       /* Process Unlocked */
 990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       __HAL_UNLOCK(hrtc);
 991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       return HAL_TIMEOUT;
 993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     }
 994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   }
 995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
1000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Process Unlocked */
1002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
1003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   return HAL_OK;
1005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** }
1006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** /**
1008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @brief  Get wake up timer counter.
1009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle 
1010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @retval Counter value
1011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   */
1012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** uint32_t HAL_RTCEx_GetWakeUpTimer(RTC_HandleTypeDef *hrtc)
1013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** {
1014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Get the counter value */
1015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   return ((uint32_t)(hrtc->Instance->WUTR & RTC_WUTR_WUT));
1016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** }
1017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** /**
1019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @brief  Handle Wake Up Timer interrupt request.
1020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @retval None
1022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   */
1023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** void HAL_RTCEx_WakeUpTimerIRQHandler(RTC_HandleTypeDef *hrtc)
1024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** {
1025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Get the WAKEUPTIMER interrupt source enable status */
1026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   if(__HAL_RTC_WAKEUPTIMER_GET_IT_SOURCE(hrtc, RTC_IT_WUT) != RESET)
1027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   {
1028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****    /* Get the pending status of the WAKEUPTIMER Interrupt */
1029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     if(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTF) != RESET)
1030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     {
1031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       /* WAKEUPTIMER callback */ 
1032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       HAL_RTCEx_WakeUpTimerEventCallback(hrtc);
1033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       
1034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       /* Clear the WAKEUPTIMER interrupt pending bit */
1035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       __HAL_RTC_WAKEUPTIMER_CLEAR_FLAG(hrtc, RTC_FLAG_WUTF);
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 40


1036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     }
1037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   }
1038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Clear the EXTI's line Flag for RTC WakeUpTimer */
1040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_EXTI_CLEAR_FLAG();
1041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   
1042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Change RTC state */
1043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
1044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** }
1045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** /**
1047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @brief  Wake Up Timer callback.
1048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @retval None
1050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   */
1051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_WakeUpTimerEventCallback(RTC_HandleTypeDef *hrtc)
1052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** {
1053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****             the HAL_RTCEx_WakeUpTimerEventCallback could be implemented in the user file
1058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****    */
1059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** }
1060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** /**
1063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @brief  Handle Wake Up Timer Polling.
1064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
1066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @retval HAL status
1067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   */
1068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForWakeUpTimerEvent(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
1069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** {
1070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
1071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   while(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTF) == RESET)
1073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   {
1074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
1075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     {
1076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
1077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       {
1078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
1079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       
1080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
1081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       }
1082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     }
1083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   }
1084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Clear the WAKEUPTIMER Flag */
1086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_CLEAR_FLAG(hrtc, RTC_FLAG_WUTF);
1087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   
1088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Change RTC state */
1089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
1090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   return HAL_OK;
1092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** }
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 41


1093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** /**
1095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @}
1096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   */
1097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** #endif /* defined(STM32F070xB) || defined(STM32F071xB) || defined(STM32F072xB) || defined(STM32F078
1098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions_Group3
1100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @brief    Extended Peripheral Control functions
1101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *
1102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** @verbatim   
1103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****  ===============================================================================
1104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****               ##### Extended Peripheral Control functions #####
1105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****  ===============================================================================  
1106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     [..]
1107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     This subsection provides functions allowing to
1108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       (+) Write a data in a specified RTC Backup data register
1109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       (+) Read a data in a specified RTC Backup data register
1110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       (+) Set the Coarse calibration parameters.
1111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       (+) Deactivate the Coarse calibration parameters
1112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       (+) Set the Smooth calibration parameters.
1113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       (+) Configure the Synchronization Shift Control Settings.
1114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       (+) Configure the Calibration Pinout (RTC_CALIB) Selection (1Hz or 512Hz).
1115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       (+) Deactivate the Calibration Pinout (RTC_CALIB) Selection (1Hz or 512Hz).
1116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       (+) Enable the RTC reference clock detection.
1117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       (+) Disable the RTC reference clock detection.
1118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       (+) Enable the Bypass Shadow feature.
1119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       (+) Disable the Bypass Shadow feature.
1120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** @endverbatim
1122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @{
1123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   */
1124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** #if !defined(STM32F030x6) && !defined(STM32F030x8) && !defined(STM32F070x6) && !defined(STM32F070xB
1126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** /**
1127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @brief  Write a data in a specified RTC Backup data register.
1128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle 
1129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  BackupRegister RTC Backup data Register number.
1130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *          This parameter can be: RTC_BKP_DRx where x can be from 0 to 4 to 
1131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *                                 specify the register.
1132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  Data Data to be written in the specified RTC Backup data register.                     
1133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @retval None
1134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   */
1135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** void HAL_RTCEx_BKUPWrite(RTC_HandleTypeDef *hrtc, uint32_t BackupRegister, uint32_t Data)
1136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** {
 1183              		.loc 1 1136 0
 1184              		.cfi_startproc
 1185              		@ args = 0, pretend = 0, frame = 0
 1186              		@ frame_needed = 0, uses_anonymous_args = 0
 1187              		@ link register save eliminated.
 1188              	.LVL101:
1137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   uint32_t tmp = 0U;
1138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Check the parameters */
1140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   assert_param(IS_RTC_BKP(BackupRegister));
1141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   tmp = (uint32_t)&(hrtc->Instance->BKP0R);
 1189              		.loc 1 1142 0
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 42


 1190 0000 0368     		ldr	r3, [r0]
 1191 0002 5033     		adds	r3, r3, #80
 1192              	.LVL102:
1143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   tmp += (BackupRegister * 4U);
 1193              		.loc 1 1143 0
 1194 0004 8900     		lsls	r1, r1, #2
 1195              	.LVL103:
 1196 0006 C918     		adds	r1, r1, r3
 1197              	.LVL104:
1144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Write the specified register */
1146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *(__IO uint32_t *)tmp = (uint32_t)Data;
 1198              		.loc 1 1146 0
 1199 0008 0A60     		str	r2, [r1]
1147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** }
 1200              		.loc 1 1147 0
 1201              		@ sp needed
 1202 000a 7047     		bx	lr
 1203              		.cfi_endproc
 1204              	.LFE49:
 1206              		.section	.text.HAL_RTCEx_BKUPRead,"ax",%progbits
 1207              		.align	1
 1208              		.global	HAL_RTCEx_BKUPRead
 1209              		.syntax unified
 1210              		.code	16
 1211              		.thumb_func
 1212              		.fpu softvfp
 1214              	HAL_RTCEx_BKUPRead:
 1215              	.LFB50:
1148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** /**
1150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @brief  Reads data from the specified RTC Backup data Register.
1151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle 
1152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  BackupRegister RTC Backup data Register number.
1153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *          This parameter can be: RTC_BKP_DRx where x can be from 0 to 4 to 
1154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *                                 specify the register.                   
1155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @retval Read value
1156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   */
1157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** uint32_t HAL_RTCEx_BKUPRead(RTC_HandleTypeDef *hrtc, uint32_t BackupRegister)
1158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** {
 1216              		.loc 1 1158 0
 1217              		.cfi_startproc
 1218              		@ args = 0, pretend = 0, frame = 0
 1219              		@ frame_needed = 0, uses_anonymous_args = 0
 1220              		@ link register save eliminated.
 1221              	.LVL105:
1159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   uint32_t tmp = 0U;
1160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Check the parameters */
1162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   assert_param(IS_RTC_BKP(BackupRegister));
1163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   tmp = (uint32_t)&(hrtc->Instance->BKP0R);
 1222              		.loc 1 1164 0
 1223 0000 0368     		ldr	r3, [r0]
 1224 0002 5033     		adds	r3, r3, #80
 1225              	.LVL106:
1165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   tmp += (BackupRegister * 4U);
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 43


 1226              		.loc 1 1165 0
 1227 0004 8900     		lsls	r1, r1, #2
 1228              	.LVL107:
 1229 0006 C918     		adds	r1, r1, r3
 1230              	.LVL108:
1166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   
1167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Read the specified register */
1168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   return (*(__IO uint32_t *)tmp);
 1231              		.loc 1 1168 0
 1232 0008 0868     		ldr	r0, [r1]
 1233              	.LVL109:
1169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** }
 1234              		.loc 1 1169 0
 1235              		@ sp needed
 1236 000a 7047     		bx	lr
 1237              		.cfi_endproc
 1238              	.LFE50:
 1240              		.section	.text.HAL_RTCEx_SetSmoothCalib,"ax",%progbits
 1241              		.align	1
 1242              		.global	HAL_RTCEx_SetSmoothCalib
 1243              		.syntax unified
 1244              		.code	16
 1245              		.thumb_func
 1246              		.fpu softvfp
 1248              	HAL_RTCEx_SetSmoothCalib:
 1249              	.LFB51:
1170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** #endif /* !defined(STM32F030x6) && !defined(STM32F030x8) && !defined(STM32F070x6) && !defined(STM32
1171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** /**
1173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @brief  Set the Smooth calibration parameters.
1174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle  
1175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  SmoothCalibPeriod Select the Smooth Calibration Period.
1176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *          This parameter can be can be one of the following values :
1177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PERIOD_32SEC: The smooth calibration period is 32s.
1178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PERIOD_16SEC: The smooth calibration period is 16s.
1179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PERIOD_8SEC: The smooth calibration period is 8s.
1180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  SmoothCalibPlusPulses Select to Set or reset the CALP bit.
1181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
1182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PLUSPULSES_SET: Add one RTCCLK pulse every 2*11 pulses.
1183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PLUSPULSES_RESET: No RTCCLK pulses are added.
1184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  SmoothCalibMinusPulsesValue Select the value of CALM[8:0] bits.
1185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *          This parameter can be one any value from 0 to 0x000001FF.
1186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @note   To deactivate the smooth calibration, the field SmoothCalibPlusPulses 
1187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *         must be equal to SMOOTHCALIB_PLUSPULSES_RESET and the field
1188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *         SmoothCalibMinusPulsesValue mut be equal to 0.
1189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @retval HAL status
1190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   */
1191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetSmoothCalib(RTC_HandleTypeDef* hrtc, uint32_t SmoothCalibPeriod, uin
1192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** {
 1250              		.loc 1 1192 0
 1251              		.cfi_startproc
 1252              		@ args = 0, pretend = 0, frame = 8
 1253              		@ frame_needed = 0, uses_anonymous_args = 0
 1254              	.LVL110:
 1255 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1256              	.LCFI12:
 1257              		.cfi_def_cfa_offset 20
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 44


 1258              		.cfi_offset 4, -20
 1259              		.cfi_offset 5, -16
 1260              		.cfi_offset 6, -12
 1261              		.cfi_offset 7, -8
 1262              		.cfi_offset 14, -4
 1263 0002 83B0     		sub	sp, sp, #12
 1264              	.LCFI13:
 1265              		.cfi_def_cfa_offset 32
 1266 0004 0400     		movs	r4, r0
 1267 0006 0D00     		movs	r5, r1
 1268 0008 0192     		str	r2, [sp, #4]
 1269 000a 1E00     		movs	r6, r3
 1270              	.LVL111:
1193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   uint32_t tickstart = 0U;
1194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Check the parameters */
1196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SMOOTH_CALIB_PERIOD(SmoothCalibPeriod));
1197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SMOOTH_CALIB_PLUS(SmoothCalibPlusPulses));
1198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SMOOTH_CALIB_MINUS(SmoothCalibMinusPulsesValue));
1199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Process Locked */
1201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 1271              		.loc 1 1201 0
 1272 000c 037F     		ldrb	r3, [r0, #28]
 1273              	.LVL112:
 1274 000e 012B     		cmp	r3, #1
 1275 0010 33D0     		beq	.L83
 1276              		.loc 1 1201 0 is_stmt 0 discriminator 2
 1277 0012 0123     		movs	r3, #1
 1278 0014 0377     		strb	r3, [r0, #28]
1202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 1279              		.loc 1 1203 0 is_stmt 1 discriminator 2
 1280 0016 0133     		adds	r3, r3, #1
 1281 0018 4377     		strb	r3, [r0, #29]
1204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 1282              		.loc 1 1206 0 discriminator 2
 1283 001a 0368     		ldr	r3, [r0]
 1284 001c CA22     		movs	r2, #202
 1285              	.LVL113:
 1286 001e 5A62     		str	r2, [r3, #36]
 1287 0020 0368     		ldr	r3, [r0]
 1288 0022 773A     		subs	r2, r2, #119
 1289 0024 5A62     		str	r2, [r3, #36]
1207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* check if a calibration is pending*/
1209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   if((hrtc->Instance->ISR & RTC_ISR_RECALPF) != RESET)
 1290              		.loc 1 1209 0 discriminator 2
 1291 0026 0368     		ldr	r3, [r0]
 1292 0028 DB68     		ldr	r3, [r3, #12]
 1293 002a DB03     		lsls	r3, r3, #15
 1294 002c 0ED4     		bmi	.L84
 1295              	.LVL114:
 1296              	.L81:
1210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   {
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 45


1211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     tickstart = HAL_GetTick();
1212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     /* check if a calibration is pending*/
1214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     while((hrtc->Instance->ISR & RTC_ISR_RECALPF) != RESET)
1215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     {
1216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       if((HAL_GetTick()-tickstart) > RTC_TIMEOUT_VALUE)
1217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       {
1218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****         /* Enable the write protection for RTC registers */
1219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****         /* Change RTC state */
1222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
1223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****         /* Process Unlocked */
1225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****         __HAL_UNLOCK(hrtc);
1226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
1228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       }
1229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     }
1230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   }
1231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Configure the Smooth calibration settings */
1233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->Instance->CALR = (uint32_t)((uint32_t)SmoothCalibPeriod | (uint32_t)SmoothCalibPlusPulses |
 1297              		.loc 1 1233 0
 1298 002e 019B     		ldr	r3, [sp, #4]
 1299 0030 1D43     		orrs	r5, r3
 1300              	.LVL115:
 1301 0032 2368     		ldr	r3, [r4]
 1302 0034 2E43     		orrs	r6, r5
 1303              	.LVL116:
 1304 0036 DE63     		str	r6, [r3, #60]
1234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 1305              		.loc 1 1236 0
 1306 0038 2368     		ldr	r3, [r4]
 1307 003a FF22     		movs	r2, #255
 1308 003c 5A62     		str	r2, [r3, #36]
1237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Change RTC state */
1239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1309              		.loc 1 1239 0
 1310 003e 0123     		movs	r3, #1
 1311 0040 6377     		strb	r3, [r4, #29]
1240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Process Unlocked */
1242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 1312              		.loc 1 1242 0
 1313 0042 0023     		movs	r3, #0
 1314 0044 2377     		strb	r3, [r4, #28]
1243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   return HAL_OK;
 1315              		.loc 1 1244 0
 1316 0046 0020     		movs	r0, #0
 1317              	.L80:
1245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** }
 1318              		.loc 1 1245 0
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 46


 1319 0048 03B0     		add	sp, sp, #12
 1320              		@ sp needed
 1321              	.LVL117:
 1322 004a F0BD     		pop	{r4, r5, r6, r7, pc}
 1323              	.LVL118:
 1324              	.L84:
1211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 1325              		.loc 1 1211 0
 1326 004c FFF7FEFF 		bl	HAL_GetTick
 1327              	.LVL119:
 1328 0050 0700     		movs	r7, r0
 1329              	.LVL120:
 1330              	.L82:
1214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     {
 1331              		.loc 1 1214 0
 1332 0052 2368     		ldr	r3, [r4]
 1333 0054 DB68     		ldr	r3, [r3, #12]
 1334 0056 DB03     		lsls	r3, r3, #15
 1335 0058 E9D5     		bpl	.L81
1216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       {
 1336              		.loc 1 1216 0
 1337 005a FFF7FEFF 		bl	HAL_GetTick
 1338              	.LVL121:
 1339 005e C01B     		subs	r0, r0, r7
 1340 0060 FA23     		movs	r3, #250
 1341 0062 9B00     		lsls	r3, r3, #2
 1342 0064 9842     		cmp	r0, r3
 1343 0066 F4D9     		bls	.L82
1219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 1344              		.loc 1 1219 0
 1345 0068 2368     		ldr	r3, [r4]
 1346 006a FF22     		movs	r2, #255
 1347 006c 5A62     		str	r2, [r3, #36]
1222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 1348              		.loc 1 1222 0
 1349 006e 0323     		movs	r3, #3
 1350 0070 6377     		strb	r3, [r4, #29]
1225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 1351              		.loc 1 1225 0
 1352 0072 0023     		movs	r3, #0
 1353 0074 2377     		strb	r3, [r4, #28]
1227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       }
 1354              		.loc 1 1227 0
 1355 0076 0320     		movs	r0, #3
 1356 0078 E6E7     		b	.L80
 1357              	.LVL122:
 1358              	.L83:
1201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 1359              		.loc 1 1201 0
 1360 007a 0220     		movs	r0, #2
 1361              	.LVL123:
 1362 007c E4E7     		b	.L80
 1363              		.cfi_endproc
 1364              	.LFE51:
 1366              		.section	.text.HAL_RTCEx_SetSynchroShift,"ax",%progbits
 1367              		.align	1
 1368              		.global	HAL_RTCEx_SetSynchroShift
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 47


 1369              		.syntax unified
 1370              		.code	16
 1371              		.thumb_func
 1372              		.fpu softvfp
 1374              	HAL_RTCEx_SetSynchroShift:
 1375              	.LFB52:
1246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** /**
1248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @brief  Configure the Synchronization Shift Control Settings.
1249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @note   When REFCKON is set, firmware must not write to Shift control register. 
1250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle    
1251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  ShiftAdd1S Select to add or not 1 second to the time calendar.
1252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values :
1253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *             @arg RTC_SHIFTADD1S_SET: Add one second to the clock calendar. 
1254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *             @arg RTC_SHIFTADD1S_RESET: No effect.
1255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  ShiftSubFS Select the number of Second Fractions to substitute.
1256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *          This parameter can be one any value from 0 to 0x7FFF.
1257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @retval HAL status
1258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   */
1259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetSynchroShift(RTC_HandleTypeDef* hrtc, uint32_t ShiftAdd1S, uint32_t 
1260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** {
 1376              		.loc 1 1260 0
 1377              		.cfi_startproc
 1378              		@ args = 0, pretend = 0, frame = 0
 1379              		@ frame_needed = 0, uses_anonymous_args = 0
 1380              	.LVL124:
 1381 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1382              	.LCFI14:
 1383              		.cfi_def_cfa_offset 24
 1384              		.cfi_offset 3, -24
 1385              		.cfi_offset 4, -20
 1386              		.cfi_offset 5, -16
 1387              		.cfi_offset 6, -12
 1388              		.cfi_offset 7, -8
 1389              		.cfi_offset 14, -4
 1390 0002 0600     		movs	r6, r0
 1391 0004 0D00     		movs	r5, r1
 1392 0006 1400     		movs	r4, r2
 1393              	.LVL125:
1261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   uint32_t tickstart = 0U;
1262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Check the parameters */
1264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SHIFT_ADD1S(ShiftAdd1S));
1265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SHIFT_SUBFS(ShiftSubFS));
1266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Process Locked */
1268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 1394              		.loc 1 1268 0
 1395 0008 037F     		ldrb	r3, [r0, #28]
 1396 000a 012B     		cmp	r3, #1
 1397 000c 48D0     		beq	.L91
 1398              		.loc 1 1268 0 is_stmt 0 discriminator 2
 1399 000e 0123     		movs	r3, #1
 1400 0010 0377     		strb	r3, [r0, #28]
1269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 1401              		.loc 1 1270 0 is_stmt 1 discriminator 2
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 48


 1402 0012 0133     		adds	r3, r3, #1
 1403 0014 4377     		strb	r3, [r0, #29]
1271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 1404              		.loc 1 1273 0 discriminator 2
 1405 0016 0368     		ldr	r3, [r0]
 1406 0018 CA22     		movs	r2, #202
 1407              	.LVL126:
 1408 001a 5A62     		str	r2, [r3, #36]
 1409 001c 0368     		ldr	r3, [r0]
 1410 001e 773A     		subs	r2, r2, #119
 1411 0020 5A62     		str	r2, [r3, #36]
1274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     tickstart = HAL_GetTick();
 1412              		.loc 1 1275 0 discriminator 2
 1413 0022 FFF7FEFF 		bl	HAL_GetTick
 1414              	.LVL127:
 1415 0026 0700     		movs	r7, r0
 1416              	.LVL128:
 1417              	.L88:
1276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     /* Wait until the shift is completed*/
1278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     while((hrtc->Instance->ISR & RTC_ISR_SHPF) != RESET)
 1418              		.loc 1 1278 0
 1419 0028 3368     		ldr	r3, [r6]
 1420 002a DA68     		ldr	r2, [r3, #12]
 1421 002c 1207     		lsls	r2, r2, #28
 1422 002e 0FD5     		bpl	.L87
1279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     {
1280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       if((HAL_GetTick()-tickstart) > RTC_TIMEOUT_VALUE)
 1423              		.loc 1 1280 0
 1424 0030 FFF7FEFF 		bl	HAL_GetTick
 1425              	.LVL129:
 1426 0034 C01B     		subs	r0, r0, r7
 1427 0036 FA23     		movs	r3, #250
 1428 0038 9B00     		lsls	r3, r3, #2
 1429 003a 9842     		cmp	r0, r3
 1430 003c F4D9     		bls	.L88
1281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       {
1282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****         /* Enable the write protection for RTC registers */
1283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 1431              		.loc 1 1283 0
 1432 003e 3368     		ldr	r3, [r6]
 1433 0040 FF22     		movs	r2, #255
 1434 0042 5A62     		str	r2, [r3, #36]
1284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 1435              		.loc 1 1285 0
 1436 0044 0323     		movs	r3, #3
 1437 0046 7377     		strb	r3, [r6, #29]
1286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****         /* Process Unlocked */
1288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****         __HAL_UNLOCK(hrtc);
 1438              		.loc 1 1288 0
 1439 0048 0023     		movs	r3, #0
 1440 004a 3377     		strb	r3, [r6, #28]
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 49


1289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 1441              		.loc 1 1290 0
 1442 004c 0320     		movs	r0, #3
 1443              	.LVL130:
 1444              	.L86:
1291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       }
1292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     }
1293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     /* Check if the reference clock detection is disabled */
1295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     if((hrtc->Instance->CR & RTC_CR_REFCKON) == RESET)
1296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     {
1297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       /* Configure the Shift settings */
1298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       hrtc->Instance->SHIFTR = (uint32_t)(uint32_t)(ShiftSubFS) | (uint32_t)(ShiftAdd1S);
1299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       /* If  RTC_CR_BYPSHAD bit = 0, wait for synchro else this check is not needed */
1301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       if((hrtc->Instance->CR & RTC_CR_BYPSHAD) == RESET)
1302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       {
1303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****         if(HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
1304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****         {
1305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****           /* Enable the write protection for RTC registers */
1306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****           __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****           hrtc->State = HAL_RTC_STATE_ERROR;
1309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****           /* Process Unlocked */
1311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****           __HAL_UNLOCK(hrtc);
1312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****           return HAL_ERROR;
1314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****         }
1315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       }
1316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     }
1317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     else
1318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     {
1319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       /* Enable the write protection for RTC registers */
1320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       /* Change RTC state */
1323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       hrtc->State = HAL_RTC_STATE_ERROR;
1324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       /* Process Unlocked */
1326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       __HAL_UNLOCK(hrtc);
1327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       return HAL_ERROR;
1329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     }
1330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Change RTC state */
1335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
1336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Process Unlocked */
1338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
1339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   return HAL_OK;
1341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** }
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 50


 1445              		.loc 1 1341 0
 1446              		@ sp needed
 1447              	.LVL131:
 1448              	.LVL132:
 1449 004e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1450              	.LVL133:
 1451              	.L87:
1295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     {
 1452              		.loc 1 1295 0
 1453 0050 9A68     		ldr	r2, [r3, #8]
 1454 0052 D206     		lsls	r2, r2, #27
 1455 0054 1CD4     		bmi	.L89
1298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 1456              		.loc 1 1298 0
 1457 0056 2C43     		orrs	r4, r5
 1458              	.LVL134:
 1459 0058 DC62     		str	r4, [r3, #44]
1301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****       {
 1460              		.loc 1 1301 0
 1461 005a 3368     		ldr	r3, [r6]
 1462 005c 9B68     		ldr	r3, [r3, #8]
 1463 005e 9B06     		lsls	r3, r3, #26
 1464 0060 08D5     		bpl	.L92
 1465              	.L90:
1332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 1466              		.loc 1 1332 0
 1467 0062 3368     		ldr	r3, [r6]
 1468 0064 FF22     		movs	r2, #255
 1469 0066 5A62     		str	r2, [r3, #36]
1335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 1470              		.loc 1 1335 0
 1471 0068 0123     		movs	r3, #1
 1472 006a 7377     		strb	r3, [r6, #29]
1338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 1473              		.loc 1 1338 0
 1474 006c 0023     		movs	r3, #0
 1475 006e 3377     		strb	r3, [r6, #28]
1340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** }
 1476              		.loc 1 1340 0
 1477 0070 0020     		movs	r0, #0
 1478 0072 ECE7     		b	.L86
 1479              	.L92:
1303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****         {
 1480              		.loc 1 1303 0
 1481 0074 3000     		movs	r0, r6
 1482 0076 FFF7FEFF 		bl	HAL_RTC_WaitForSynchro
 1483              	.LVL135:
 1484 007a 0028     		cmp	r0, #0
 1485 007c F1D0     		beq	.L90
1306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 1486              		.loc 1 1306 0
 1487 007e 3368     		ldr	r3, [r6]
 1488 0080 FF22     		movs	r2, #255
 1489 0082 5A62     		str	r2, [r3, #36]
1308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 1490              		.loc 1 1308 0
 1491 0084 0423     		movs	r3, #4
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 51


 1492 0086 7377     		strb	r3, [r6, #29]
1311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 1493              		.loc 1 1311 0
 1494 0088 0023     		movs	r3, #0
 1495 008a 3377     		strb	r3, [r6, #28]
1313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****         }
 1496              		.loc 1 1313 0
 1497 008c 0120     		movs	r0, #1
 1498 008e DEE7     		b	.L86
 1499              	.LVL136:
 1500              	.L89:
1320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 1501              		.loc 1 1320 0
 1502 0090 FF22     		movs	r2, #255
 1503 0092 5A62     		str	r2, [r3, #36]
1323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 1504              		.loc 1 1323 0
 1505 0094 0423     		movs	r3, #4
 1506 0096 7377     		strb	r3, [r6, #29]
1326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 1507              		.loc 1 1326 0
 1508 0098 0023     		movs	r3, #0
 1509 009a 3377     		strb	r3, [r6, #28]
1328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     }
 1510              		.loc 1 1328 0
 1511 009c 0120     		movs	r0, #1
 1512 009e D6E7     		b	.L86
 1513              	.LVL137:
 1514              	.L91:
1268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 1515              		.loc 1 1268 0
 1516 00a0 0220     		movs	r0, #2
 1517              	.LVL138:
 1518 00a2 D4E7     		b	.L86
 1519              		.cfi_endproc
 1520              	.LFE52:
 1522              		.section	.text.HAL_RTCEx_SetCalibrationOutPut,"ax",%progbits
 1523              		.align	1
 1524              		.global	HAL_RTCEx_SetCalibrationOutPut
 1525              		.syntax unified
 1526              		.code	16
 1527              		.thumb_func
 1528              		.fpu softvfp
 1530              	HAL_RTCEx_SetCalibrationOutPut:
 1531              	.LFB53:
1342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** /**
1344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @brief  Configure the Calibration Pinout (RTC_CALIB) Selection (1Hz or 512Hz).
1345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  CalibOutput Select the Calibration output Selection .
1347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
1348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *             @arg RTC_CALIBOUTPUT_512HZ: A signal has a regular waveform at 512Hz.
1349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *             @arg RTC_CALIBOUTPUT_1HZ: A signal has a regular waveform at 1Hz.
1350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @retval HAL status
1351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   */
1352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetCalibrationOutPut(RTC_HandleTypeDef* hrtc, uint32_t CalibOutput)
1353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** {
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 52


 1532              		.loc 1 1353 0
 1533              		.cfi_startproc
 1534              		@ args = 0, pretend = 0, frame = 0
 1535              		@ frame_needed = 0, uses_anonymous_args = 0
 1536              	.LVL139:
 1537 0000 30B5     		push	{r4, r5, lr}
 1538              	.LCFI15:
 1539              		.cfi_def_cfa_offset 12
 1540              		.cfi_offset 4, -12
 1541              		.cfi_offset 5, -8
 1542              		.cfi_offset 14, -4
1354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Check the parameters */
1355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   assert_param(IS_RTC_CALIB_OUTPUT(CalibOutput));
1356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Process Locked */
1358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 1543              		.loc 1 1358 0
 1544 0002 037F     		ldrb	r3, [r0, #28]
 1545 0004 012B     		cmp	r3, #1
 1546 0006 20D0     		beq	.L95
 1547              		.loc 1 1358 0 is_stmt 0 discriminator 2
 1548 0008 0122     		movs	r2, #1
 1549 000a 0277     		strb	r2, [r0, #28]
1359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 1550              		.loc 1 1360 0 is_stmt 1 discriminator 2
 1551 000c 0223     		movs	r3, #2
 1552 000e 4377     		strb	r3, [r0, #29]
1361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 1553              		.loc 1 1363 0 discriminator 2
 1554 0010 0368     		ldr	r3, [r0]
 1555 0012 CA24     		movs	r4, #202
 1556 0014 5C62     		str	r4, [r3, #36]
 1557 0016 0368     		ldr	r3, [r0]
 1558 0018 773C     		subs	r4, r4, #119
 1559 001a 5C62     		str	r4, [r3, #36]
1364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Clear flags before config */
1366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->Instance->CR &= (uint32_t)~RTC_CR_COSEL;
 1560              		.loc 1 1366 0 discriminator 2
 1561 001c 0468     		ldr	r4, [r0]
 1562 001e A368     		ldr	r3, [r4, #8]
 1563 0020 0B4D     		ldr	r5, .L96
 1564 0022 2B40     		ands	r3, r5
 1565 0024 A360     		str	r3, [r4, #8]
1367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Configure the RTC_CR register */
1369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->Instance->CR |= (uint32_t)CalibOutput;
 1566              		.loc 1 1369 0 discriminator 2
 1567 0026 0468     		ldr	r4, [r0]
 1568 0028 A368     		ldr	r3, [r4, #8]
 1569 002a 1943     		orrs	r1, r3
 1570              	.LVL140:
 1571 002c A160     		str	r1, [r4, #8]
1370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 53


1371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_CALIBRATION_OUTPUT_ENABLE(hrtc);
 1572              		.loc 1 1371 0 discriminator 2
 1573 002e 0168     		ldr	r1, [r0]
 1574 0030 8C68     		ldr	r4, [r1, #8]
 1575 0032 8023     		movs	r3, #128
 1576 0034 1B04     		lsls	r3, r3, #16
 1577 0036 2343     		orrs	r3, r4
 1578 0038 8B60     		str	r3, [r1, #8]
1372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 1579              		.loc 1 1374 0 discriminator 2
 1580 003a 0368     		ldr	r3, [r0]
 1581 003c FF21     		movs	r1, #255
 1582 003e 5962     		str	r1, [r3, #36]
1375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Change RTC state */
1377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1583              		.loc 1 1377 0 discriminator 2
 1584 0040 4277     		strb	r2, [r0, #29]
1378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Process Unlocked */
1380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 1585              		.loc 1 1380 0 discriminator 2
 1586 0042 0023     		movs	r3, #0
 1587 0044 0377     		strb	r3, [r0, #28]
1381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   return HAL_OK;
 1588              		.loc 1 1382 0 discriminator 2
 1589 0046 0020     		movs	r0, #0
 1590              	.LVL141:
 1591              	.L94:
1383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** }
 1592              		.loc 1 1383 0
 1593              		@ sp needed
 1594 0048 30BD     		pop	{r4, r5, pc}
 1595              	.LVL142:
 1596              	.L95:
1358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 1597              		.loc 1 1358 0
 1598 004a 0220     		movs	r0, #2
 1599              	.LVL143:
 1600 004c FCE7     		b	.L94
 1601              	.L97:
 1602 004e C046     		.align	2
 1603              	.L96:
 1604 0050 FFFFF7FF 		.word	-524289
 1605              		.cfi_endproc
 1606              	.LFE53:
 1608              		.section	.text.HAL_RTCEx_DeactivateCalibrationOutPut,"ax",%progbits
 1609              		.align	1
 1610              		.global	HAL_RTCEx_DeactivateCalibrationOutPut
 1611              		.syntax unified
 1612              		.code	16
 1613              		.thumb_func
 1614              		.fpu softvfp
 1616              	HAL_RTCEx_DeactivateCalibrationOutPut:
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 54


 1617              	.LFB54:
1384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** /**
1386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @brief  Deactivate the Calibration Pinout (RTC_CALIB) Selection (1Hz or 512Hz).
1387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @retval HAL status
1389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   */
1390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateCalibrationOutPut(RTC_HandleTypeDef* hrtc)
1391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** {
 1618              		.loc 1 1391 0
 1619              		.cfi_startproc
 1620              		@ args = 0, pretend = 0, frame = 0
 1621              		@ frame_needed = 0, uses_anonymous_args = 0
 1622              	.LVL144:
 1623 0000 10B5     		push	{r4, lr}
 1624              	.LCFI16:
 1625              		.cfi_def_cfa_offset 8
 1626              		.cfi_offset 4, -8
 1627              		.cfi_offset 14, -4
1392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Process Locked */
1393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 1628              		.loc 1 1393 0
 1629 0002 037F     		ldrb	r3, [r0, #28]
 1630 0004 012B     		cmp	r3, #1
 1631 0006 16D0     		beq	.L100
 1632              		.loc 1 1393 0 is_stmt 0 discriminator 2
 1633 0008 0122     		movs	r2, #1
 1634 000a 0277     		strb	r2, [r0, #28]
1394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 1635              		.loc 1 1395 0 is_stmt 1 discriminator 2
 1636 000c 0223     		movs	r3, #2
 1637 000e 4377     		strb	r3, [r0, #29]
1396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 1638              		.loc 1 1398 0 discriminator 2
 1639 0010 0368     		ldr	r3, [r0]
 1640 0012 CA21     		movs	r1, #202
 1641 0014 5962     		str	r1, [r3, #36]
 1642 0016 0368     		ldr	r3, [r0]
 1643 0018 7739     		subs	r1, r1, #119
 1644 001a 5962     		str	r1, [r3, #36]
1399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_CALIBRATION_OUTPUT_DISABLE(hrtc);
 1645              		.loc 1 1400 0 discriminator 2
 1646 001c 0168     		ldr	r1, [r0]
 1647 001e 8B68     		ldr	r3, [r1, #8]
 1648 0020 064C     		ldr	r4, .L101
 1649 0022 2340     		ands	r3, r4
 1650 0024 8B60     		str	r3, [r1, #8]
1401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 1651              		.loc 1 1403 0 discriminator 2
 1652 0026 0368     		ldr	r3, [r0]
 1653 0028 FF21     		movs	r1, #255
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 55


 1654 002a 5962     		str	r1, [r3, #36]
1404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Change RTC state */
1406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1655              		.loc 1 1406 0 discriminator 2
 1656 002c 4277     		strb	r2, [r0, #29]
1407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Process Unlocked */
1409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 1657              		.loc 1 1409 0 discriminator 2
 1658 002e 0023     		movs	r3, #0
 1659 0030 0377     		strb	r3, [r0, #28]
1410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   return HAL_OK;
 1660              		.loc 1 1411 0 discriminator 2
 1661 0032 0020     		movs	r0, #0
 1662              	.LVL145:
 1663              	.L99:
1412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** }
 1664              		.loc 1 1412 0
 1665              		@ sp needed
 1666 0034 10BD     		pop	{r4, pc}
 1667              	.LVL146:
 1668              	.L100:
1393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 1669              		.loc 1 1393 0
 1670 0036 0220     		movs	r0, #2
 1671              	.LVL147:
 1672 0038 FCE7     		b	.L99
 1673              	.L102:
 1674 003a C046     		.align	2
 1675              	.L101:
 1676 003c FFFF7FFF 		.word	-8388609
 1677              		.cfi_endproc
 1678              	.LFE54:
 1680              		.section	.text.HAL_RTCEx_SetRefClock,"ax",%progbits
 1681              		.align	1
 1682              		.global	HAL_RTCEx_SetRefClock
 1683              		.syntax unified
 1684              		.code	16
 1685              		.thumb_func
 1686              		.fpu softvfp
 1688              	HAL_RTCEx_SetRefClock:
 1689              	.LFB55:
1413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** /**
1415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @brief  Enable the RTC reference clock detection.
1416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @retval HAL status
1418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   */
1419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetRefClock(RTC_HandleTypeDef* hrtc)
1420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** {
 1690              		.loc 1 1420 0
 1691              		.cfi_startproc
 1692              		@ args = 0, pretend = 0, frame = 0
 1693              		@ frame_needed = 0, uses_anonymous_args = 0
 1694              	.LVL148:
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 56


 1695 0000 10B5     		push	{r4, lr}
 1696              	.LCFI17:
 1697              		.cfi_def_cfa_offset 8
 1698              		.cfi_offset 4, -8
 1699              		.cfi_offset 14, -4
 1700 0002 0400     		movs	r4, r0
1421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Process Locked */
1422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 1701              		.loc 1 1422 0
 1702 0004 037F     		ldrb	r3, [r0, #28]
 1703 0006 012B     		cmp	r3, #1
 1704 0008 29D0     		beq	.L106
 1705              		.loc 1 1422 0 is_stmt 0 discriminator 2
 1706 000a 0123     		movs	r3, #1
 1707 000c 0377     		strb	r3, [r0, #28]
1423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 1708              		.loc 1 1424 0 is_stmt 1 discriminator 2
 1709 000e 0133     		adds	r3, r3, #1
 1710 0010 4377     		strb	r3, [r0, #29]
1425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 1711              		.loc 1 1427 0 discriminator 2
 1712 0012 0368     		ldr	r3, [r0]
 1713 0014 CA22     		movs	r2, #202
 1714 0016 5A62     		str	r2, [r3, #36]
 1715 0018 0368     		ldr	r3, [r0]
 1716 001a 773A     		subs	r2, r2, #119
 1717 001c 5A62     		str	r2, [r3, #36]
1428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Set Initialization mode */
1430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   if(RTC_EnterInitMode(hrtc) != HAL_OK)
 1718              		.loc 1 1430 0 discriminator 2
 1719 001e FFF7FEFF 		bl	RTC_EnterInitMode
 1720              	.LVL149:
 1721 0022 0028     		cmp	r0, #0
 1722 0024 12D1     		bne	.L107
1431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   {
1432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     /* Enable the write protection for RTC registers */
1433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     /* Set RTC state*/
1436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
1437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     /* Process Unlocked */
1439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     __HAL_UNLOCK(hrtc);
1440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     return HAL_ERROR;
1442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   }
1443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   else
1444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   {
1445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     __HAL_RTC_CLOCKREF_DETECTION_ENABLE(hrtc);
 1723              		.loc 1 1445 0
 1724 0026 2268     		ldr	r2, [r4]
 1725 0028 9368     		ldr	r3, [r2, #8]
 1726 002a 1021     		movs	r1, #16
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 57


 1727 002c 0B43     		orrs	r3, r1
 1728 002e 9360     		str	r3, [r2, #8]
1446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     /* Exit Initialization mode */
1448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     hrtc->Instance->ISR &= (uint32_t)~RTC_ISR_INIT;
 1729              		.loc 1 1448 0
 1730 0030 2268     		ldr	r2, [r4]
 1731 0032 D368     		ldr	r3, [r2, #12]
 1732 0034 7031     		adds	r1, r1, #112
 1733 0036 8B43     		bics	r3, r1
 1734 0038 D360     		str	r3, [r2, #12]
1449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   }
1450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 1735              		.loc 1 1452 0
 1736 003a 2368     		ldr	r3, [r4]
 1737 003c FF22     		movs	r2, #255
 1738 003e 5A62     		str	r2, [r3, #36]
1453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****    /* Change RTC state */
1455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1739              		.loc 1 1455 0
 1740 0040 0123     		movs	r3, #1
 1741 0042 6377     		strb	r3, [r4, #29]
1456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Process Unlocked */
1458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 1742              		.loc 1 1458 0
 1743 0044 0023     		movs	r3, #0
 1744 0046 2377     		strb	r3, [r4, #28]
1459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   return HAL_OK;
 1745              		.loc 1 1460 0
 1746 0048 0020     		movs	r0, #0
 1747              	.L104:
1461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** }
 1748              		.loc 1 1461 0
 1749              		@ sp needed
 1750              	.LVL150:
 1751 004a 10BD     		pop	{r4, pc}
 1752              	.LVL151:
 1753              	.L107:
1433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 1754              		.loc 1 1433 0
 1755 004c 2368     		ldr	r3, [r4]
 1756 004e FF22     		movs	r2, #255
 1757 0050 5A62     		str	r2, [r3, #36]
1436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 1758              		.loc 1 1436 0
 1759 0052 0423     		movs	r3, #4
 1760 0054 6377     		strb	r3, [r4, #29]
1439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 1761              		.loc 1 1439 0
 1762 0056 0023     		movs	r3, #0
 1763 0058 2377     		strb	r3, [r4, #28]
1441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   }
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 58


 1764              		.loc 1 1441 0
 1765 005a 0120     		movs	r0, #1
 1766 005c F5E7     		b	.L104
 1767              	.LVL152:
 1768              	.L106:
1422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 1769              		.loc 1 1422 0
 1770 005e 0220     		movs	r0, #2
 1771              	.LVL153:
 1772 0060 F3E7     		b	.L104
 1773              		.cfi_endproc
 1774              	.LFE55:
 1776              		.section	.text.HAL_RTCEx_DeactivateRefClock,"ax",%progbits
 1777              		.align	1
 1778              		.global	HAL_RTCEx_DeactivateRefClock
 1779              		.syntax unified
 1780              		.code	16
 1781              		.thumb_func
 1782              		.fpu softvfp
 1784              	HAL_RTCEx_DeactivateRefClock:
 1785              	.LFB56:
1462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** /**
1464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @brief  Disable the RTC reference clock detection.
1465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @retval HAL status
1467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   */
1468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateRefClock(RTC_HandleTypeDef* hrtc)
1469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** {
 1786              		.loc 1 1469 0
 1787              		.cfi_startproc
 1788              		@ args = 0, pretend = 0, frame = 0
 1789              		@ frame_needed = 0, uses_anonymous_args = 0
 1790              	.LVL154:
 1791 0000 10B5     		push	{r4, lr}
 1792              	.LCFI18:
 1793              		.cfi_def_cfa_offset 8
 1794              		.cfi_offset 4, -8
 1795              		.cfi_offset 14, -4
 1796 0002 0400     		movs	r4, r0
1470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Process Locked */
1471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 1797              		.loc 1 1471 0
 1798 0004 037F     		ldrb	r3, [r0, #28]
 1799 0006 012B     		cmp	r3, #1
 1800 0008 29D0     		beq	.L111
 1801              		.loc 1 1471 0 is_stmt 0 discriminator 2
 1802 000a 0123     		movs	r3, #1
 1803 000c 0377     		strb	r3, [r0, #28]
1472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 1804              		.loc 1 1473 0 is_stmt 1 discriminator 2
 1805 000e 0133     		adds	r3, r3, #1
 1806 0010 4377     		strb	r3, [r0, #29]
1474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 59


 1807              		.loc 1 1476 0 discriminator 2
 1808 0012 0368     		ldr	r3, [r0]
 1809 0014 CA22     		movs	r2, #202
 1810 0016 5A62     		str	r2, [r3, #36]
 1811 0018 0368     		ldr	r3, [r0]
 1812 001a 773A     		subs	r2, r2, #119
 1813 001c 5A62     		str	r2, [r3, #36]
1477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   
1478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Set Initialization mode */
1479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   if(RTC_EnterInitMode(hrtc) != HAL_OK)
 1814              		.loc 1 1479 0 discriminator 2
 1815 001e FFF7FEFF 		bl	RTC_EnterInitMode
 1816              	.LVL155:
 1817 0022 0028     		cmp	r0, #0
 1818 0024 12D1     		bne	.L112
1480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   {
1481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     /* Enable the write protection for RTC registers */
1482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     /* Set RTC state*/
1485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
1486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     /* Process Unlocked */
1488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     __HAL_UNLOCK(hrtc);
1489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     return HAL_ERROR;
1491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   }
1492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   else
1493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   {
1494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     __HAL_RTC_CLOCKREF_DETECTION_DISABLE(hrtc);
 1819              		.loc 1 1494 0
 1820 0026 2268     		ldr	r2, [r4]
 1821 0028 9368     		ldr	r3, [r2, #8]
 1822 002a 1021     		movs	r1, #16
 1823 002c 8B43     		bics	r3, r1
 1824 002e 9360     		str	r3, [r2, #8]
1495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     /* Exit Initialization mode */
1497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****     hrtc->Instance->ISR &= (uint32_t)~RTC_ISR_INIT;
 1825              		.loc 1 1497 0
 1826 0030 2268     		ldr	r2, [r4]
 1827 0032 D368     		ldr	r3, [r2, #12]
 1828 0034 7031     		adds	r1, r1, #112
 1829 0036 8B43     		bics	r3, r1
 1830 0038 D360     		str	r3, [r2, #12]
1498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   }
1499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 1831              		.loc 1 1501 0
 1832 003a 2368     		ldr	r3, [r4]
 1833 003c FF22     		movs	r2, #255
 1834 003e 5A62     		str	r2, [r3, #36]
1502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Change RTC state */
1504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1835              		.loc 1 1504 0
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 60


 1836 0040 0123     		movs	r3, #1
 1837 0042 6377     		strb	r3, [r4, #29]
1505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Process Unlocked */
1507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 1838              		.loc 1 1507 0
 1839 0044 0023     		movs	r3, #0
 1840 0046 2377     		strb	r3, [r4, #28]
1508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   return HAL_OK;
 1841              		.loc 1 1509 0
 1842 0048 0020     		movs	r0, #0
 1843              	.L109:
1510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** }
 1844              		.loc 1 1510 0
 1845              		@ sp needed
 1846              	.LVL156:
 1847 004a 10BD     		pop	{r4, pc}
 1848              	.LVL157:
 1849              	.L112:
1482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 1850              		.loc 1 1482 0
 1851 004c 2368     		ldr	r3, [r4]
 1852 004e FF22     		movs	r2, #255
 1853 0050 5A62     		str	r2, [r3, #36]
1485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 1854              		.loc 1 1485 0
 1855 0052 0423     		movs	r3, #4
 1856 0054 6377     		strb	r3, [r4, #29]
1488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 1857              		.loc 1 1488 0
 1858 0056 0023     		movs	r3, #0
 1859 0058 2377     		strb	r3, [r4, #28]
1490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   }
 1860              		.loc 1 1490 0
 1861 005a 0120     		movs	r0, #1
 1862 005c F5E7     		b	.L109
 1863              	.LVL158:
 1864              	.L111:
1471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 1865              		.loc 1 1471 0
 1866 005e 0220     		movs	r0, #2
 1867              	.LVL159:
 1868 0060 F3E7     		b	.L109
 1869              		.cfi_endproc
 1870              	.LFE56:
 1872              		.section	.text.HAL_RTCEx_EnableBypassShadow,"ax",%progbits
 1873              		.align	1
 1874              		.global	HAL_RTCEx_EnableBypassShadow
 1875              		.syntax unified
 1876              		.code	16
 1877              		.thumb_func
 1878              		.fpu softvfp
 1880              	HAL_RTCEx_EnableBypassShadow:
 1881              	.LFB57:
1511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** /**
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 61


1513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @brief  Enable the Bypass Shadow feature.
1514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @note   When the Bypass Shadow is enabled the calendar value are taken
1516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *         directly from the Calendar counter.
1517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @retval HAL status
1518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   */
1519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_EnableBypassShadow(RTC_HandleTypeDef* hrtc)
1520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** {
 1882              		.loc 1 1520 0
 1883              		.cfi_startproc
 1884              		@ args = 0, pretend = 0, frame = 0
 1885              		@ frame_needed = 0, uses_anonymous_args = 0
 1886              	.LVL160:
 1887 0000 10B5     		push	{r4, lr}
 1888              	.LCFI19:
 1889              		.cfi_def_cfa_offset 8
 1890              		.cfi_offset 4, -8
 1891              		.cfi_offset 14, -4
1521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Process Locked */
1522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 1892              		.loc 1 1522 0
 1893 0002 037F     		ldrb	r3, [r0, #28]
 1894 0004 012B     		cmp	r3, #1
 1895 0006 16D0     		beq	.L115
 1896              		.loc 1 1522 0 is_stmt 0 discriminator 2
 1897 0008 0122     		movs	r2, #1
 1898 000a 0277     		strb	r2, [r0, #28]
1523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 1899              		.loc 1 1524 0 is_stmt 1 discriminator 2
 1900 000c 0223     		movs	r3, #2
 1901 000e 4377     		strb	r3, [r0, #29]
1525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 1902              		.loc 1 1527 0 discriminator 2
 1903 0010 0368     		ldr	r3, [r0]
 1904 0012 CA21     		movs	r1, #202
 1905 0014 5962     		str	r1, [r3, #36]
 1906 0016 0368     		ldr	r3, [r0]
 1907 0018 7739     		subs	r1, r1, #119
 1908 001a 5962     		str	r1, [r3, #36]
1528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Set the BYPSHAD bit */
1530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->Instance->CR |= (uint8_t)RTC_CR_BYPSHAD;
 1909              		.loc 1 1530 0 discriminator 2
 1910 001c 0168     		ldr	r1, [r0]
 1911 001e 8B68     		ldr	r3, [r1, #8]
 1912 0020 2024     		movs	r4, #32
 1913 0022 2343     		orrs	r3, r4
 1914 0024 8B60     		str	r3, [r1, #8]
1531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 1915              		.loc 1 1533 0 discriminator 2
 1916 0026 0368     		ldr	r3, [r0]
 1917 0028 FF21     		movs	r1, #255
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 62


 1918 002a 5962     		str	r1, [r3, #36]
1534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Change RTC state */
1536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1919              		.loc 1 1536 0 discriminator 2
 1920 002c 4277     		strb	r2, [r0, #29]
1537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Process Unlocked */
1539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 1921              		.loc 1 1539 0 discriminator 2
 1922 002e 0023     		movs	r3, #0
 1923 0030 0377     		strb	r3, [r0, #28]
1540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   return HAL_OK;
 1924              		.loc 1 1541 0 discriminator 2
 1925 0032 0020     		movs	r0, #0
 1926              	.LVL161:
 1927              	.L114:
1542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** }
 1928              		.loc 1 1542 0
 1929              		@ sp needed
 1930 0034 10BD     		pop	{r4, pc}
 1931              	.LVL162:
 1932              	.L115:
1522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 1933              		.loc 1 1522 0
 1934 0036 0220     		movs	r0, #2
 1935              	.LVL163:
 1936 0038 FCE7     		b	.L114
 1937              		.cfi_endproc
 1938              	.LFE57:
 1940              		.section	.text.HAL_RTCEx_DisableBypassShadow,"ax",%progbits
 1941              		.align	1
 1942              		.global	HAL_RTCEx_DisableBypassShadow
 1943              		.syntax unified
 1944              		.code	16
 1945              		.thumb_func
 1946              		.fpu softvfp
 1948              	HAL_RTCEx_DisableBypassShadow:
 1949              	.LFB58:
1543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** /**
1545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @brief  Disable the Bypass Shadow feature.
1546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @note   When the Bypass Shadow is enabled the calendar value are taken
1548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   *         directly from the Calendar counter.
1549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   * @retval HAL status
1550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   */
1551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DisableBypassShadow(RTC_HandleTypeDef* hrtc)
1552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** {
 1950              		.loc 1 1552 0
 1951              		.cfi_startproc
 1952              		@ args = 0, pretend = 0, frame = 0
 1953              		@ frame_needed = 0, uses_anonymous_args = 0
 1954              	.LVL164:
 1955 0000 10B5     		push	{r4, lr}
 1956              	.LCFI20:
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 63


 1957              		.cfi_def_cfa_offset 8
 1958              		.cfi_offset 4, -8
 1959              		.cfi_offset 14, -4
1553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Process Locked */
1554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 1960              		.loc 1 1554 0
 1961 0002 037F     		ldrb	r3, [r0, #28]
 1962 0004 012B     		cmp	r3, #1
 1963 0006 16D0     		beq	.L118
 1964              		.loc 1 1554 0 is_stmt 0 discriminator 2
 1965 0008 0122     		movs	r2, #1
 1966 000a 0277     		strb	r2, [r0, #28]
1555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 1967              		.loc 1 1556 0 is_stmt 1 discriminator 2
 1968 000c 0223     		movs	r3, #2
 1969 000e 4377     		strb	r3, [r0, #29]
1557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 1970              		.loc 1 1559 0 discriminator 2
 1971 0010 0368     		ldr	r3, [r0]
 1972 0012 CA21     		movs	r1, #202
 1973 0014 5962     		str	r1, [r3, #36]
 1974 0016 0368     		ldr	r3, [r0]
 1975 0018 7739     		subs	r1, r1, #119
 1976 001a 5962     		str	r1, [r3, #36]
1560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Reset the BYPSHAD bit */
1562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->Instance->CR &= ((uint8_t)~RTC_CR_BYPSHAD);
 1977              		.loc 1 1562 0 discriminator 2
 1978 001c 0168     		ldr	r1, [r0]
 1979 001e 8C68     		ldr	r4, [r1, #8]
 1980 0020 DF23     		movs	r3, #223
 1981 0022 2340     		ands	r3, r4
 1982 0024 8B60     		str	r3, [r1, #8]
1563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 1983              		.loc 1 1565 0 discriminator 2
 1984 0026 0368     		ldr	r3, [r0]
 1985 0028 FF21     		movs	r1, #255
 1986 002a 5962     		str	r1, [r3, #36]
1566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Change RTC state */
1568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1987              		.loc 1 1568 0 discriminator 2
 1988 002c 4277     		strb	r2, [r0, #29]
1569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   /* Process Unlocked */
1571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 1989              		.loc 1 1571 0 discriminator 2
 1990 002e 0023     		movs	r3, #0
 1991 0030 0377     		strb	r3, [r0, #28]
1572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
1573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c ****   return HAL_OK;
 1992              		.loc 1 1573 0 discriminator 2
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 64


 1993 0032 0020     		movs	r0, #0
 1994              	.LVL165:
 1995              	.L117:
1574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** }
 1996              		.loc 1 1574 0
 1997              		@ sp needed
 1998 0034 10BD     		pop	{r4, pc}
 1999              	.LVL166:
 2000              	.L118:
1554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rtc_ex.c **** 
 2001              		.loc 1 1554 0
 2002 0036 0220     		movs	r0, #2
 2003              	.LVL167:
 2004 0038 FCE7     		b	.L117
 2005              		.cfi_endproc
 2006              	.LFE58:
 2008              		.text
 2009              	.Letext0:
 2010              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 2011              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 2012              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 2013              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f042x6.h"
 2014              		.file 6 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 2015              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 2016              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 2017              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\lib\\gcc\\arm-none-eab
 2018              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\includ
 2019              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 2020              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rtc.h"
 2021              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rtc_ex.h"
 2022              		.file 14 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 65


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f0xx_hal_rtc_ex.c
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:16     .text.HAL_RTCEx_SetTimeStamp:00000000 $t
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:23     .text.HAL_RTCEx_SetTimeStamp:00000000 HAL_RTCEx_SetTimeStamp
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:101    .text.HAL_RTCEx_SetTimeStamp:00000048 $d
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:106    .text.HAL_RTCEx_SetTimeStamp_IT:00000000 $t
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:113    .text.HAL_RTCEx_SetTimeStamp_IT:00000000 HAL_RTCEx_SetTimeStamp_IT
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:208    .text.HAL_RTCEx_SetTimeStamp_IT:00000068 $d
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:214    .text.HAL_RTCEx_DeactivateTimeStamp:00000000 $t
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:221    .text.HAL_RTCEx_DeactivateTimeStamp:00000000 HAL_RTCEx_DeactivateTimeStamp
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:292    .text.HAL_RTCEx_DeactivateTimeStamp:00000044 $d
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:298    .text.HAL_RTCEx_GetTimeStamp:00000000 $t
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:305    .text.HAL_RTCEx_GetTimeStamp:00000000 HAL_RTCEx_GetTimeStamp
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:450    .text.HAL_RTCEx_GetTimeStamp:000000ac $d
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:457    .text.HAL_RTCEx_SetTamper:00000000 $t
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:464    .text.HAL_RTCEx_SetTamper:00000000 HAL_RTCEx_SetTamper
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:555    .text.HAL_RTCEx_SetTamper:00000060 $d
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:560    .text.HAL_RTCEx_SetTamper_IT:00000000 $t
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:567    .text.HAL_RTCEx_SetTamper_IT:00000000 HAL_RTCEx_SetTamper_IT
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:675    .text.HAL_RTCEx_SetTamper_IT:0000007c $d
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:681    .text.HAL_RTCEx_DeactivateTamper:00000000 $t
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:688    .text.HAL_RTCEx_DeactivateTamper:00000000 HAL_RTCEx_DeactivateTamper
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:737    .text.HAL_RTCEx_TimeStampEventCallback:00000000 $t
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:744    .text.HAL_RTCEx_TimeStampEventCallback:00000000 HAL_RTCEx_TimeStampEventCallback
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:759    .text.HAL_RTCEx_Tamper1EventCallback:00000000 $t
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:766    .text.HAL_RTCEx_Tamper1EventCallback:00000000 HAL_RTCEx_Tamper1EventCallback
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:781    .text.HAL_RTCEx_Tamper2EventCallback:00000000 $t
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:788    .text.HAL_RTCEx_Tamper2EventCallback:00000000 HAL_RTCEx_Tamper2EventCallback
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:803    .text.HAL_RTCEx_TamperTimeStampIRQHandler:00000000 $t
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:810    .text.HAL_RTCEx_TamperTimeStampIRQHandler:00000000 HAL_RTCEx_TamperTimeStampIRQHandler
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:911    .text.HAL_RTCEx_TamperTimeStampIRQHandler:0000007c $d
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:919    .text.HAL_RTCEx_PollForTimeStampEvent:00000000 $t
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:926    .text.HAL_RTCEx_PollForTimeStampEvent:00000000 HAL_RTCEx_PollForTimeStampEvent
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:1007   .text.HAL_RTCEx_PollForTimeStampEvent:00000050 $d
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:1012   .text.HAL_RTCEx_PollForTamper1Event:00000000 $t
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:1019   .text.HAL_RTCEx_PollForTamper1Event:00000000 HAL_RTCEx_PollForTamper1Event
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:1088   .text.HAL_RTCEx_PollForTamper1Event:00000044 $d
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:1093   .text.HAL_RTCEx_PollForTamper2Event:00000000 $t
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:1100   .text.HAL_RTCEx_PollForTamper2Event:00000000 HAL_RTCEx_PollForTamper2Event
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:1169   .text.HAL_RTCEx_PollForTamper2Event:00000044 $d
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:1174   .text.HAL_RTCEx_BKUPWrite:00000000 $t
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:1181   .text.HAL_RTCEx_BKUPWrite:00000000 HAL_RTCEx_BKUPWrite
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:1207   .text.HAL_RTCEx_BKUPRead:00000000 $t
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:1214   .text.HAL_RTCEx_BKUPRead:00000000 HAL_RTCEx_BKUPRead
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:1241   .text.HAL_RTCEx_SetSmoothCalib:00000000 $t
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:1248   .text.HAL_RTCEx_SetSmoothCalib:00000000 HAL_RTCEx_SetSmoothCalib
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:1367   .text.HAL_RTCEx_SetSynchroShift:00000000 $t
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:1374   .text.HAL_RTCEx_SetSynchroShift:00000000 HAL_RTCEx_SetSynchroShift
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:1523   .text.HAL_RTCEx_SetCalibrationOutPut:00000000 $t
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:1530   .text.HAL_RTCEx_SetCalibrationOutPut:00000000 HAL_RTCEx_SetCalibrationOutPut
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:1604   .text.HAL_RTCEx_SetCalibrationOutPut:00000050 $d
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:1609   .text.HAL_RTCEx_DeactivateCalibrationOutPut:00000000 $t
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:1616   .text.HAL_RTCEx_DeactivateCalibrationOutPut:00000000 HAL_RTCEx_DeactivateCalibrationOutPut
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:1676   .text.HAL_RTCEx_DeactivateCalibrationOutPut:0000003c $d
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:1681   .text.HAL_RTCEx_SetRefClock:00000000 $t
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:1688   .text.HAL_RTCEx_SetRefClock:00000000 HAL_RTCEx_SetRefClock
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:1777   .text.HAL_RTCEx_DeactivateRefClock:00000000 $t
ARM GAS  C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s 			page 66


C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:1784   .text.HAL_RTCEx_DeactivateRefClock:00000000 HAL_RTCEx_DeactivateRefClock
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:1873   .text.HAL_RTCEx_EnableBypassShadow:00000000 $t
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:1880   .text.HAL_RTCEx_EnableBypassShadow:00000000 HAL_RTCEx_EnableBypassShadow
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:1941   .text.HAL_RTCEx_DisableBypassShadow:00000000 $t
C:\Users\HOGEHO~1\AppData\Local\Temp\cc9n4y3p.s:1948   .text.HAL_RTCEx_DisableBypassShadow:00000000 HAL_RTCEx_DisableBypassShadow

UNDEFINED SYMBOLS
RTC_Bcd2ToByte
HAL_GetTick
HAL_RTC_WaitForSynchro
RTC_EnterInitMode
